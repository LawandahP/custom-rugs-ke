{"version":3,"sources":["constants/currencyConverterConstants.js","constants/productConstants.js","constants/cartConstants.js","reducers/cartReducers.js","constants/userConstants.js","constants/orderConstants.js","constants/useGeolocationConstants.js","constants/galleryConstants.js","constants/mpesaConstants.js","store.js","reducers/useGeolocationReducer.js","reducers/productReducers.js","reducers/userReducers.js","reducers/orderReducers.js","reducers/galleryReducers.js","reducers/currencyConvertReducers.js","reducers/mpesaReducers.js","components/FormContainer.js","components/SearchBox.js","actions/userActions.js","components/Message.js","components/Loader.js","components/useGeolocation.js","components/Header.js","components/Footer.js","components/RatingComponent.js","components/Product.js","components/Paginate.js","actions/productActions.js","screens/ShopScreen.js","components/Gallery.js","actions/galleryActions.js","screens/HomeScreen.js","screens/ProductScreen.js","components/EmptyCart.js","actions/cartActions.js","screens/CartScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderDetailsScreen.js","actions/mpesaAction.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["CURRENCY_CONVERT_REQUEST","CURRENCY_CONVERT_SUCCESS","CURRENCY_CONVERT_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","commafy","num","str","toString","split","length","replace","join","USER_LOGIN_SUCCESS","USER_LOGIN_REQUEST","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","USER_DETAILS_SUCCESS","USER_DETAILS_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_SUCCESS","USER_LIST_REQUEST","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_SUCCESS","USER_DELETE_REQUEST","USER_DELETE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","GET_LOCATION_REQUEST","GET_LOCATION_SUCCESS","GET_LOCATION_FAIL","GALLERY_LIST_REQUEST","GALLERY_LIST_SUCCESS","GALLERY_LIST_FAIL","MPESA_STK_PUSH_REQUEST","MPESA_STK_PUSH_SUCCESS","MPESA_STK_PUSH_FAIL","reducer","combineReducers","useGeolocation","state","coordinates","action","type","loading","lat","payload","lng","error","productList","products","page","pages","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userUpdate","userDelete","orderCreate","order","orderDetails","orderItems","shippngAddress","orderPay","orderListMy","orders","orderList","orderDeliver","galleryList","images","currencyConvert","result","fromCurrency","toCurrency","amount","Number","currencies","stkPush","message","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleWare","thunk","store","createStore","composeWithDevTools","applyMiddleware","FormContainer","children","Container","Row","className","Col","xs","md","SearchBox","useState","search","setSearch","history","useHistory","Form","onSubmit","e","preventDefault","location","pathname","push","inline","InputGroup","Control","style","color","height","borderRadius","borderColor","placeholder","aria-label","onChange","target","value","Button","title","variant","id","getUserDetails","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","Message","Alert","Loader","Spinner","animation","role","fontWeight","width","margin","display","useGeoLocation","loaded","setLocation","onSuccess","coords","latitude","longitude","onError","code","useEffect","navigator","geolocation","getCurrentPosition","Header","useSelector","useDispatch","logoutHandler","removeItem","Navbar","expand","collapseOnSelect","to","Brand","Toggle","aria-controls","Collapse","Nav","NavDropdown","Divider","Link","isAdmin","class","username","Item","onClick","align","fontSize","padding","reduce","acc","Qty","Footer","RatingComponent","text","Product","Card","slug","Img","src","image","Body","as","Title","name","Text","rating","price","Paginate","console","log","Pagination","Array","keys","active","listProducts","listProductDetails","createProduct","post","ShopScreen","textAlign","lg","xl","Gallery","sm","boxShadow","Image","picture","HomeScreen","ProductScreen","match","setQty","setRating","comment","setComment","reviewTitle","setReviewTitle","errorProductReview","loadingProductReview","successProductReview","params","labels","0","1","2","3","4","5","classes","makeStyles","root","alignItems","useStyles","React","hover","setHover","m-y","alt","fluid","ListGroup","numReviews","countInStock","Badge","bg","disabled","Accordion","defaultActiveKey","eventKey","description","review","created_at","substring","toLowerCase","productId","Group","controlId","Rating","precision","onChangeActive","event","newHover","Box","ml","Label","row","EmptyCart","alignContent","addToCart","setItem","stringify","CartScreen","removeFromCartHandler","removeFromCart","backgroundColor","toFixed","LoginScreen","email","setEmail","password","setPassword","redirect","isReaveled","setIsRevealed","login","required","prevState","RegisterScreen","first_name","setFirstName","last_name","setLastName","phone_number","setPhoneNumber","register","maxLength","aria-describedby","size","ProfileScreen","comfirmPassword","setComfirmPassword","setMessage","loadingOrders","errorOrders","Tabs","Tab","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","isDelivered","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","county","setCounty","subCounty","setsubCounty","ward","setWard","shippingCompany","setShippingCompany","PaymentScreen","setPaymentMethod","Check","checked","label","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","thumbnail","createOrder","OrderDetailsScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","loadingStkPush","successStkPush","errorStkPush","qty","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","_id","href","deliveredAt","paidAt","roundedCircle","aria-hidden","paymentResult","payOrder","deliverOrder","UserListScreen","loadingDelete","errorDelete","successDelete","deleteHandler","confirm","delete","deleteUser","full_name","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","errorCreate","loadingCreate","successCreate","createdProduct","deleteProduct","category","ProductEditScreen","setName","setImage","setPrice","setCategory","setDescription","setCountInStock","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","multiple","rows","IsAdmin","OrderListScreen","App","path","component","exact","ProductCreateScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7ecb6ea7.chunk.js","sourcesContent":["export const CURRENCY_CONVERT_REQUEST = 'CURRENCY_CONVERT_REQUEST'\nexport const CURRENCY_CONVERT_SUCCESS = 'CURRENCY_CONVERT_SUCCESS'\nexport const CURRENCY_CONVERT_FAIL = 'CURRENCY_CONVERT_FAIL'","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","\nexport const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\n\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\n\n\nexport function commafy( num ) {\n    var str = num.toString().split('.');\n    if (str[0].length >= 3) {\n        str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, '$1,');\n    }\n    if (str[1] && str[1].length >= 3) {\n        str[1] = str[1].replace(/(\\d{3})/g, '$1 ');\n    }\n    return str.join('.');\n}\n\n\n","import \n    {   CART_ADD_ITEM, \n        CART_REMOVE_ITEM,\n        CART_SAVE_SHIPPING_ADDRESS,\n\n        CART_SAVE_PAYMENT_METHOD,\n\n        CART_CLEAR_ITEMS\n    } from '../constants/cartConstants'\n\n    \nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch(action.type){\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if(existItem) {\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map(x =>\n                        x.product === existItem.product ? item : x)\n                }\n\n            } else {\n                return {\n                    ...state,\n                    cartItems:[...state.cartItems, item]\n                }\n            }\n            \n            // this case removes items from cart\n            case CART_REMOVE_ITEM:\n                return {\n                    ...state,\n                    cartItems: state.cartItems.filter(x => x.product !== action.payload)\n                }\n            \n            case CART_SAVE_SHIPPING_ADDRESS:\n                return {\n                    ...state,\n                    shippingAddress: action.payload\n                } \n\n            case CART_SAVE_PAYMENT_METHOD:\n                return {\n                    ...state,\n                    paymentMethod: action.payload\n                }\n\n            case CART_CLEAR_ITEMS:\n                return {\n                    ...state,\n                    cartItems: []\n                }\n            \n        default:\n            return state\n    }\n}","export const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\n\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\n\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\n\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\n\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","\nexport const GET_LOCATION_REQUEST = 'GET_LOCATION_REQUEST'\nexport const GET_LOCATION_SUCCESS = 'GET_LOCATION_SUCCESS'\nexport const GET_LOCATION_FAIL = 'GET_LOCATION_FAIL'\n","\n\nexport const GALLERY_LIST_REQUEST = 'GALLERY_LIST_REQUEST'\nexport const GALLERY_LIST_SUCCESS = 'GALLERY_LIST_SUCCESS'\nexport const GALLERY_LIST_FAIL = 'GALLERY_LIST_FAIL'\nexport const GALLERY_LIST_RESET = 'GALLERY_LIST_RESET'","export const MPESA_STK_PUSH_REQUEST = 'MPESA_STK_PUSH_REQUEST'\nexport const MPESA_STK_PUSH_SUCCESS = 'MPESA_STK_PUSH_SUCCESS'\nexport const MPESA_STK_PUSH_FAIL = 'MPESA_STK_PUSH_FAIL'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\n//reducers\nimport { currencyConvertReducer } from './reducers/currencyConvertReducers'\n\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer\n } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\nimport { useGeolocationReducer } from './reducers/useGeolocationReducer'\nimport { galleryListReducer } from './reducers/galleryReducers'\nimport { mpesaStkPushReducer } from './reducers/mpesaReducers'\n\nconst reducer = combineReducers({\n     \n     useGeolocation: useGeolocationReducer,\n\n     productList: productListReducer,\n     productDetails: productDetailsReducer,\n     productDelete: productDeleteReducer,\n     productCreate: productCreateReducer,\n     productUpdate: productUpdateReducer,\n     productReviewCreate: productReviewCreateReducer,\n     productTopRated: productTopRatedReducer,\n\n     cart: cartReducer, \n\n     userLogin: userLoginReducer,\n     userRegister: userRegisterReducer,\n     userDetails: userDetailsReducer,\n     userUpdateProfile: userUpdateProfileReducer,\n     userList: userListReducer,\n     userUpdate: userUpdateReducer,\n     userDelete: userDeleteReducer,\n\n     orderCreate: orderCreateReducer,\n     orderDetails: orderDetailsReducer,\n     orderPay: orderPayReducer,\n     orderListMy: orderListMyReducer,\n     orderList: orderListReducer,\n     orderDeliver: orderDeliverReducer,\n\n     galleryList: galleryListReducer,\n     \n     currencyConvert: currencyConvertReducer,\n\n     stkPush: mpesaStkPushReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n     JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n     JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n     JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\n// add Items from local storage define in actions to initial state \nconst initialState = {\n     cart: { \n          cartItems: cartItemsFromStorage,\n          shippingAddress: shippingAddressFromStorage\n     },\n     userLogin: { userInfo: userInfoFromStorage },\n\n}\n\nconst middleWare = [thunk]\n\nconst store = createStore(reducer, initialState,\n     composeWithDevTools(applyMiddleware(...middleWare)))\n\nexport default store  ","import { \n    GET_LOCATION_REQUEST,\n    GET_LOCATION_SUCCESS,\n    GET_LOCATION_FAIL\n} from '../constants/useGeolocationConstants'\n\n\n\nexport const useGeolocationReducer = (state = { coordinates: {} }, action) => {\n    switch(action.type) {\n\n        case GET_LOCATION_REQUEST:\n            return {loading: true, ...state}\n        \n        case GET_LOCATION_SUCCESS:\n            return { loading: false, coordinates: {\n                lat: action.payload.lat,\n                lng: action.payload.lng\n            }}\n        \n        case GET_LOCATION_FAIL:\n            return {loading: false, error: action.payload}\n        \n        default:\n            return state\n\n    }\n}","import { \n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    \n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    \n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} \n\nfrom '../constants/productConstants'\n\nexport const productListReducer = (state = { products:[] }, action) =>{\n    switch(action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return {loading: true, products:[]}\n        \n        case PRODUCT_LIST_SUCCESS:\n            return {\n                        loading: false,\n                        products: action.payload.products,\n                        page:action.payload.page,\n                        pages:action.payload.pages\n                    }\n        \n        case PRODUCT_LIST_FAIL:\n            return {loading: false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\n\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) =>{\n    switch(action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {loading: true, ...state}\n        \n        case PRODUCT_DETAILS_SUCCESS:\n            return {loading: false, product: action.payload}\n        \n        case PRODUCT_DETAILS_FAIL:\n            return {loading: false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\nexport const productDeleteReducer = (state = {}, action) =>{\n    switch(action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return {loading: true}\n        \n        case PRODUCT_DELETE_SUCCESS:\n            return {loading: false, success: true}\n        \n        case PRODUCT_DELETE_FAIL:\n            return {loading: false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\nexport const productCreateReducer = (state = {}, action) =>{\n    switch(action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return {loading: true}\n        \n        case PRODUCT_CREATE_SUCCESS:\n            return {loading: false, success: true, product: action.payload}\n        \n        case PRODUCT_CREATE_FAIL:\n            return {loading: false, error: action.payload}\n        \n        case PRODUCT_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) =>{\n    switch(action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return {loading: true}\n        \n        case PRODUCT_UPDATE_SUCCESS:\n            return {loading: false, success: true, product: action.payload}\n        \n        case PRODUCT_UPDATE_FAIL:\n            return {loading: false, error: action.payload}\n        \n        default:\n            return state\n    }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) =>{\n    switch(action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return {loading: true}\n        \n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return {loading: false, success: true}\n        \n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return {loading: false, error: action.payload}\n        \n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productTopRatedReducer = (state = { products: []}, action) =>{\n    switch(action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return {loading: true, products: []}\n        \n        case PRODUCT_TOP_SUCCESS:\n            return {loading: false, success: true, products: action.payload}\n        \n        case PRODUCT_TOP_FAIL:\n            return {loading: false, error: action.payload}\n\n        default:\n            return state\n    }\n}","import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n\n } from '../constants/userConstants'\n\n\nexport const userLoginReducer = (state = { }, action) =>{\n    switch(action.type) {\n        case USER_LOGIN_REQUEST:\n            return {loading: true}\n        \n        case USER_LOGIN_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n        \n        case USER_LOGIN_FAIL:\n            return {loading: false, error: action.payload}\n        \n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userRegisterReducer = (state = { }, action) =>{\n    switch(action.type) {\n        case USER_REGISTER_REQUEST:\n            return {loading: true}\n        \n        case USER_REGISTER_SUCCESS:\n            return {loading: false, userInfo: action.payload}\n        \n        case USER_REGISTER_FAIL:\n            return {loading: false, error: action.payload}\n        \n        case USER_LOGOUT:\n            return {}   \n             \n        default:\n            return state\n    }\n}\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) =>{\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {...state, loading: true}\n        \n        case USER_DETAILS_SUCCESS:\n            return {loading: false, user: action.payload}\n        \n        case USER_DETAILS_FAIL:\n            return {loading: false, error: action.payload}  \n        \n        case USER_DETAILS_RESET:\n            return {user: {} }\n             \n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        \n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n        \n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }  \n        \n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n             \n        default:\n            return state\n    }\n}\n\nexport const userListReducer = (state = {users: []}, action) => {\n    switch(action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n        \n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n        \n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }  \n        \n        case USER_LIST_RESET:\n            return { users: [] }\n             \n        default:\n            return state\n    }\n}\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n        \n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n        \n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }  \n             \n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user:{} }, action) => {\n    switch(action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n        \n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n        \n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }  \n        \n        case USER_UPDATE_RESET:\n            return { user:{} }\n             \n        default:\n            return state\n    }\n}","import { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_CREATE_RESET:\n            return {}\n        default:\n            return state\n    }\n}\n\n\nexport const orderDetailsReducer = (state = {loading: true, orderItems:[], shippngAddress:{}}, action) => {\n    switch(action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        \n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        \n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {} , action) => {\n    switch(action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true\n\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n\n\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\n    switch(action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n\n            }\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_LIST_MY_RESET:\n            return {orders: []}\n        \n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = {orders:[]}, action) => {\n    switch(action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n\n            }\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        \n        default:\n            return state\n    }\n}\n\nexport const orderDeliverReducer = (state = {} , action) => {\n    switch(action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n\n            }\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        case ORDER_DELIVER_RESET:\n            return {}\n        \n        default:\n            return state\n    }\n}\n","import { \n    \n    GALLERY_LIST_REQUEST,\n    GALLERY_LIST_SUCCESS,\n    GALLERY_LIST_FAIL,\n\n} from '../constants/galleryConstants'\n\n\nexport const galleryListReducer = (state = {images:[]}, action) => {\n    switch(action.type) {\n        case GALLERY_LIST_REQUEST:\n            return {\n                loading: true\n            }\n        \n        case GALLERY_LIST_SUCCESS:\n            return {\n                loading: false,\n                images: action.payload\n\n            }\n        case GALLERY_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        \n        default:\n            return state\n    }\n}","import { \n    CURRENCY_CONVERT_REQUEST,\n    CURRENCY_CONVERT_SUCCESS,\n    CURRENCY_CONVERT_FAIL,\n    CURRENCY_CONVERT_RESET,\n\n} from '../constants/currencyConverterConstants'\n\n\nexport const currencyConvertReducer = (state = {loading: true, result: null, fromCurrency: \"KES\", toCurrency:\"USD\", amount: Number, currencies: []}, action) => {\n    switch(action.type) {\n        case CURRENCY_CONVERT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        \n        case CURRENCY_CONVERT_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n        case CURRENCY_CONVERT_FAIL:\n            return {\n                loading: false,\n                error: action.payload,\n            }\n        \n        default:\n            return state\n    }\n}\n\n","import { MPESA_STK_PUSH_REQUEST, MPESA_STK_PUSH_SUCCESS, MPESA_STK_PUSH_FAIL } from \"../constants/mpesaConstants\"\n\n\n\nexport const mpesaStkPushReducer = (state = {}, action) =>{\n    switch(action.type) {\n        case MPESA_STK_PUSH_REQUEST:\n            return {loading: true}\n        \n        case MPESA_STK_PUSH_SUCCESS:\n            return {loading: false, success: true, message: action.payload['ResponseDescription']}\n        \n        case MPESA_STK_PUSH_FAIL:\n            return {loading: false, error: action.payload['errorMessage']}\n           \n        default:\n            return state\n    }\n}","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children}) {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={8}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, {useState} from 'react'\nimport { Button, Col, Form, InputGroup } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nimport FormContainer from './FormContainer'\n\n\n\nfunction SearchBox() {\n\n    const [search, setSearch] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if(search || history.location.pathname === \"/shop\") {\n            history.push(`shop/?search=${search}&page=1`)\n        } else {\n            history.push(history.location.pathname)\n        }\n    }\n\n\n    return (\n\n        <Form onSubmit={submitHandler} inline>\n             <InputGroup>\n                 <Form.Control \n                    style={{color: '#f16100', height: \"100%\", borderRadius: \"3rem\", borderColor: \"#f16100\"}}\n                    placeholder=\"search...\"\n                    aria-label=\"search\"\n                    onChange={(e) => setSearch(e.target.value)}\n                    /> \n                  <Button\n                    type='submit'\n                    title=\"search\"  \n                    style={{color: '#f16100'}}\n                    variant=\"none\" \n                    id=\"search-button\">\n                    <i className=\"fas fa-search\"></i>\n                 </Button>  \n             </InputGroup>      \n         </Form>\n        \n        \n\n       \n        \n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\n\nimport { \n    \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    USER_DETAILS_RESET,\n\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n\n    \n\n} from '../constants/userConstants'\n\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type':'application/json'\n            }\n        }\n        \n        const { data } = await axios.post(\n            '/api/users/login',\n            {'email': email, 'password': password},\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET})\n    dispatch({ type: USER_LIST_RESET})\n    \n}\n\n\nexport const register = (first_name, last_name, email, phone_number, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type':'application/json'\n            }\n        }\n        \n        const { data } = await axios.post(\n            '/api/users/register',\n            {\n                'first_name': first_name,\n                'last_name': last_name,\n                'email': email, \n                'phone_number': phone_number,\n                'password': password\n            },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch(error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.get(\n            `/api/users/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch(error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.put(\n            `/api/users/profile/update`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n\n    } catch(error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\nexport const listUsers = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.get(\n            `/api/users`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.delete(\n            `/api/users/delete/${id}`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        })\n\n    } catch(error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.put(\n            `/api/users/update/${user.slug}`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        }) \n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}","import React, { useState, useEffect }  from 'react'\nimport { Alert } from 'react-bootstrap'\n\n\nexport function Message({variant, children}) {\n    \n    return (\n        <Alert variant={variant}>\n            {children}\n\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\n\n\nfunction Loader() {\n    return (\n        <Spinner\n            animation=\"border\" \n            role=\"status\"\n            style={{\n                color: '#f16100',\n                fontWeight: '5rem',\n                height:'3rem',\n                width:'3rem',\n                margin:'auto',\n                display:'block'\n            }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React, { useState, useEffect } from \"react\";\n\nconst useGeoLocation = () => {\n    const [location, setLocation] = useState({\n        loaded: false,\n        coordinates: { lat: \"\", lng: \"\" },\n    });\n\n    \n    const onSuccess = (location) => {\n        setLocation({\n            loaded: true,\n            coordinates: {\n                lat: location.coords.latitude,\n                lng: location.coords.longitude,\n            },\n        });\n    };\n\n    const onError = (error) => {\n        setLocation({\n            loaded: true,\n            error: {\n                code: error.code,\n                message: error.message,\n            },\n        });\n    };\n\n    useEffect(() => {\n        if (!(\"geolocation\" in navigator)) {\n            onError({\n                code: 0,\n                message: \"Geolocation not supported\",\n            });\n        }\n\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\n    }, []);\n\n    return location;\n};\n\nexport default useGeoLocation;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from \"react\";\n\n// const useGeoLocation = () => {\n//     const [location, setLocation] = useState({\n//         loaded: false,\n//         coordinates: { lat: \"\", lng: \"\" },\n//     });\n\n    \n//     const onSuccess = (location) => {\n//         setLocation({\n//             loaded: true,\n//             coordinates: {\n//                 lat: location.coords.latitude,\n//                 lng: location.coords.longitude,\n//             },\n//         });\n//     };\n\n//     const onError = (error) => {\n//         setLocation({\n//             loaded: true,\n//             error: {\n//                 code: error.code,\n//                 message: error.message,\n//             },\n//         });\n//     };\n\n//     useEffect(() => {\n//         if (!(\"geolocation\" in navigator)) {\n//             onError({\n//                 code: 0,\n//                 message: \"Geolocation not supported\",\n//             });\n//         }\n\n//         navigator.geolocation.getCurrentPosition(onSuccess, onError);\n//     }, []);\n\n//     return location;\n// };\n\n// export default useGeoLocation;","import React from 'react'\n\nimport {  useDispatch, useSelector} from 'react-redux'\n\nimport { Button, Container, Nav, Navbar, NavDropdown, Image } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nimport Message from './Message'\nimport Loader from './Loader'\n\nimport useGeoLocation from './useGeolocation'\n\n\n\n\n\n\nfunction Header() {\n\n    \n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n\n    // get info from localStorage/state\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const location = useGeoLocation()\n    \n\n    \n\n    const dispatch = useDispatch()\n    const logoutHandler = () => {\n        dispatch(logout())\n    }\n\n    return (\n        <div>\n            \n            <Navbar variant=\"\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>CustomRugsKenya</Navbar.Brand>\n                    </LinkContainer>\n                    {/* {\n                        location.loaded ? JSON.stringify(location)\n                        : <Loader />\n                    } */}\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\"  />\n                    \n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n\n                        <SearchBox xs={12} /> \n                        \n                        <NavDropdown.Divider />\n                        \n                        <LinkContainer to=\"/\">\n                            <Nav.Link>Home</Nav.Link>\n                        </LinkContainer>\n\n                        <NavDropdown.Divider />\n\n                        <LinkContainer to=\"/about-us\">\n                            <Nav.Link>About Us</Nav.Link>\n                        </LinkContainer>\n\n                        <NavDropdown.Divider />\n\n                        <LinkContainer \n                            to=\"/our-projects\">\n                            <Nav.Link>Our Projects</Nav.Link>\n                        </LinkContainer>\n\n                        <NavDropdown.Divider />\n                            \n                        <LinkContainer to=\"/shop\">\n                            <Nav.Link>Shop</Nav.Link>\n                        </LinkContainer>\n\n                        <NavDropdown.Divider />\n\n                       \n                        {userInfo && !userInfo.isAdmin ? (\n                            <div>\n                                <NavDropdown title = {\n                                                <span>\n                                                    <strong><i class=\"fas fa-user-check\"> Hi, {userInfo.username}</i></strong>\n                                                </span> \n                                            }>\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item><i class=\"fas fa-user-circle\"></i>  My Account</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <NavDropdown.Divider />\n                                    \n                                    <NavDropdown.Item onClick={logoutHandler}><i class=\"fas fa-sign-out-alt\"></i>  Logout</NavDropdown.Item>\n                                    \n                                    \n                                </NavDropdown>\n                            </div>\n\n                        ) : !userInfo ? (\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link><i className=\"fas fa-user-circle\"></i> SIGN IN</Nav.Link>\n                                </LinkContainer>\n                        ) : (\"\")\n                            \n                        }\n\n                        {userInfo && userInfo.isAdmin ? (\n                            <NavDropdown title = {\n                                <span>\n                                    <strong><i class=\"fas fa-user-check\"> Hi, {userInfo.username}</i></strong>\n                                </span> \n                                }>\n                                    \n                                    <NavDropdown.Item>  Admin</NavDropdown.Item>\n                                    \n\n                                <NavDropdown.Divider />\n\n                                    <LinkContainer to='/profile'>\n                                        <NavDropdown.Item><i class=\"fas fa-user-circle\"></i>  My Account</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/users'>\n                                        <NavDropdown.Item><i class=\"fas fa-users\"></i>  Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/products'>\n                                        <NavDropdown.Item><i class=\"fab fa-product-hunt\"></i>  Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/orders'>\n                                        <NavDropdown.Item><i class=\"fab fa-product-hunt\"></i>  Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                <NavDropdown.Divider />\n                            \n                                <NavDropdown.Item onClick={logoutHandler}><i class=\"fas fa-sign-out-alt\"></i>  Logout</NavDropdown.Item>\n                            </NavDropdown>\n\n                        ) : (\"\")}\n\n                        <NavDropdown.Divider />\n                        <LinkContainer align=\"center\" title=\"cart\" to=\"/cart\">\n                            <Nav.Link>\n                                <i className=\"fas fa-shopping-cart\">\n                                <sup style={{fontSize: 15, color: '#f16100', padding: 3}}>\n                                                {cartItems.reduce((acc, item) => acc + item.Qty, 0)}\n                                    </sup>\n                                </i>\n                            </Nav.Link>\n                        </LinkContainer>\n\n\n                    </Nav>\n\n                    \n                        \n\n                    </Navbar.Collapse>\n                    \n                </Container>\n            </Navbar>\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        \n        <footer>\n            <Container>\n                <Row>\n                    <Col className=\"text-center py-3\">Copyright &copy; Custom Rugs Kenya</Col>\n                </Row>\n            </Container>\n        </footer>\n        \n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction RatingComponent({value, text, color}) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{color}} className={ //logic for assigning stars\n                    value >= 1\n                    ? 'fas fa-star'\n                    : value >= 0.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n            <span>\n                <i style={{color}} className={ //logic for assigning stars\n                    value >= 2\n                    ? 'fas fa-star'\n                    : value >= 1.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n            <span>\n                <i style={{color}} className={ //logic for assigning stars\n                    value >= 3\n                    ? 'fas fa-star'\n                    : value >= 2.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n            <span>\n                <i style={{color}} className={ //logic for assigning stars\n                    value >= 4\n                    ? 'fas fa-star'\n                    : value >= 3.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n            <span>\n                <i style={{color}} className={ //logic for assigning stars\n                    value >= 5\n                    ? 'fas fa-star'\n                    : value >= 4.5\n                        ? 'fas fa-star-half-alt'\n                        : 'far fa-star'\n                }>\n\n                </i>\n            </span> \n\n            <span>{text && text }</span>\n            \n        </div>\n    )\n}\n\nexport default RatingComponent\n","import React from 'react'\n\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport RatingComponent from './RatingComponent' //impoert rating component\n\nimport { commafy } from '../constants/cartConstants'\n\nfunction Product({ product }) {\n    return (\n        <Card className=\"p-1 my-1 rounded\">\n            <Link to={`/product/${product.slug}`}>\n                <Card.Img src={product.image} />\n            </Link>\n\n            <Card.Body as=\"div\">\n                <Link to={`/product/${product.slug}`}>\n                    <Card.Title>\n                        {product.name}\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-2\" >\n                        <RatingComponent value={product.rating}  color={'#f16100'} />\n                    </div>\n                </Card.Text>\n                <Card.Text >\n                    KES {commafy(Number(product.price))}\n                </Card.Text>\n            </Card.Body>\n\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nimport { Link } from 'react-router-dom';\n\n\n\nfunction Paginate({pages, page, search='', isAdmin=false }) {\n\n    if(search) {\n        search = search.split('?search=')[1].split('&')[0]\n    }\n    console.log('search:', search)\n\n\n    return (pages > 1 && (\n        <Pagination variant=\"info\">\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer \n                    key={x + 1}\n                    to={!isAdmin ?\n                        `shop/?search=${search}&page=${x + 1}`\n                        : `products/?search=${search}&page=${x + 1}`}>\n                    <Pagination.Item color=\"#f16100\" active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))} \n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","// This is responsible for calling api from the server\nimport axios from 'axios'\nimport { \n    PRODUCT_LIST_REQUEST,\n    PRODUCT_LIST_SUCCESS,\n    PRODUCT_LIST_FAIL,\n    \n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    \n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n\n} from '../constants/productConstants'\n\nexport const listProducts = (search = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n        const { data } = await axios.get(`/api/products${search}`) //proxy in package.json \"http://127.0.0.1:8000/\"\n\n        dispatch({\n            type:PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type:PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n        const { data } = await axios.get(`/api/products/top`) //proxy in package.json \"http://127.0.0.1:8000/\"\n\n        dispatch({\n            type:PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type:PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/products/${id}`) //proxy in package.json \"http://127.0.0.1:8000/\"\n\n        dispatch({\n            type:PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type:PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n    }\n}\n\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.delete(\n            `/api/products/delete/${id}`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.post(\n            `/api/products/create`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.put(\n            `/api/products/update/${product.slug}`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data\n        })\n\n        //update details\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.post(\n            `/api/products/review/${productId}`,\n            review,     \n            config\n        )\n\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}","import { Row, Col } from 'react-bootstrap'\n\nimport React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport  Product  from '../components/Product'\nimport  Loader  from '../components/Loader'\nimport  Message  from '../components/Message'\nimport  Paginate  from '../components/Paginate'\n\nimport { listProducts } from '../actions/productActions'\n\n\nfunction ShopScreen({ history }) {\n\n    const dispatch = useDispatch() \n    const productList = useSelector(state => state.productList) // renders products to page\n    const { error, loading, products, page, pages } = productList\n\n    let search = history.location.search\n    \n\n    useEffect(() => {\n        dispatch(listProducts(search))  \n       \n    }, [dispatch, search])\n\n\n    return (\n        <div>\n            {/* <h1>Latest Merch</h1> */}\n            { loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                :\n                <div>\n                    <Row className=\"my-2\">\n                        {products.map(product => (\n                            <Col style={{textAlign: \"center\"}} key={product.slug} xs={6} md={6} lg={4} xl={3}>\n                                <Product product={product} />\n                            </Col>\n                        ))}\n                    </Row>\n                    <Paginate page={page} pages={pages} search={search}/>\n                </div>\n            } \n        </div>\n    )\n}\n\nexport default ShopScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Row, Col, Button, Card, Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { listGallery } from '../actions/galleryActions'\n\nimport  Loader  from './Loader'\nimport  Message  from './Message'\n\nfunction Gallery() {\n\n    const dispatch = useDispatch() \n    const galleryList = useSelector(state => state.galleryList) // renders gallerys to page\n    const { error, loading, images } = galleryList\n\n    \n    useEffect(() => {\n        dispatch(listGallery())  \n       \n    }, [dispatch])\n\n\n\n    \n    return (\n            <div>\n                {loading ? <Loader />\n                    : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                \n                \n                    \n                        <div>\n                        <Row className=\"pt-5\">\n                        \n                            <Col align=\"center\">\n                                <h1 style={{color: \"#000\"}}>Get Your Personalized Rug Today</h1>\n                            </Col>\n                        \n                        </Row>\n                        <Row>\n                            <Col align=\"center\">\n                                <p>The best design inspiration - expertly curated for you</p>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col align=\"center\">\n                                <Link to=\"/shop\">\n                                    <Button style={{borderRadius: \"3rem\"}}>VISIT OUR SHOP</Button>\n                                </Link>\n                            </Col>\n                        </Row>\n\n\n                        {/* //gallery */}\n\n                        <Row className=\"pt-5\" align=\"center\">\n                        { images.map(image => (\n                            <Col md={6} xs={6} sm={6} xl={3} className=\"my-2\">\n                                <Card style={{boxShadow: \"2px 2px 2px 2px grey\", borderRadius: \"1rem\"}}>\n                                    <Image style={{ borderRadius: \"1rem\", boxShadow: \"5px\"}} src={image.picture}></Image>\n                                </Card>\n                            </Col>\n                        ))}\n                        </Row>\n                        </div>\n                    \n                    \n                    )}\n            </div>\n    )\n}\n\nexport default Gallery\n","import axios from 'axios'\n\nimport { \n    \n    GALLERY_LIST_REQUEST,\n    GALLERY_LIST_SUCCESS,\n    GALLERY_LIST_FAIL,\n\n} from '../constants/galleryConstants'\n\n\n\n\n\n\n\n\n\nexport const listGallery = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: GALLERY_LIST_REQUEST\n        })\n\n        const { data } = await axios.get(\n            `/api/gallery`,\n        )\n\n        dispatch({\n            type: GALLERY_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: GALLERY_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}","import React from 'react'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Gallery from '../components/Gallery'\n\nfunction HomeScreen() {\n    return (\n    \n            // {/* <ProductCarousel /> */}\n        <div>\n            <Gallery />\n\n        </div>\n                \n    )\n}\n\nexport default HomeScreen","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Accordion, Form, Badge } from 'react-bootstrap'\n\n\nimport RatingComponent from '../components/RatingComponent'\nimport  Loader  from '../components/Loader'\nimport  Message  from '../components/Message'\n\nimport { commafy } from '../constants/cartConstants'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nimport { listProductDetails, createProductReview } from '../actions/productActions'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport  Rating from '@material-ui/lab/Rating'\nimport Box from '@material-ui/core/Box'\n\n\n\n//history used to redirect\n\n\nfunction ProductScreen({ match, history }) {\n    const [Qty, setQty] = useState(1)\n\n    // Rating Choice\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n    const [reviewTitle, setReviewTitle] = useState('')\n\n    const dispatch = useDispatch() //import listProducts action and use it to fetch products from server\n   \n    const productDetails = useSelector(state => state.productDetails) \n    const { error, loading, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin) \n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate) \n    const { error: errorProductReview, loading: loadingProductReview, success: successProductReview } = productReviewCreate\n\n    \n    \n\n    useEffect(() => {\n\n        if(successProductReview) {\n            setRating(0)\n            setReviewTitle('')\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET})\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n\n    //redirect to card after add to cart button i pressed\n    const addToCartHandler = () => {\n        history.push(`/cart/${match.params.id}?Qty=${Qty}`)\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n                rating,\n                reviewTitle,\n                comment\n            }\n            \n        ))\n    }\n\n    \n\n    const labels = {\n        0: 'Select Stars',\n        1: <p>I hate it! <i style={{color:\"#f16100\"}} class=\"fas fa-sad-cry\"></i></p>,\n        2: <p>I don't like it! <i style={{color:\"#f16100\"}} class=\"fas fa-sad-tear\"></i></p>,\n        3: <p>It's Alright <i style={{color:\"#f16100\"}} class=\"fas fa-meh-blank\"></i></p>,\n        4: <p>I Like it <i style={{color:\"#f16100\"}} class=\"fas fa-laugh\"></i></p>,\n        5: <p>I Love It <i style={{color:\"red\"}} className=\"fas fa-heart\"></i></p>\n      };\n      \n    const useStyles = makeStyles({\n        root: {\n            \n            display: 'flex',\n            alignItems: 'center',\n        },\n    });\n\n    const classes = useStyles();\n    const [hover, setHover] = React.useState(-1);\n\n    \n        \n\n    return (\n        <div>\n            <Link to='/shop' variant='info' type=\"button\">Continue shopping</Link>\n\n            { loading? \n                <Loader />\n                : error ? \n                    <Message variant='danger'>{error}</Message>\n                :\n\n                <div>\n                \n                <Row m-y=\"4\">\n                    <Col className=\"my-1 rounded\" md={6} sm={12} xl={6}>\n                        <Card className=\"rounded\">\n                            <Image src={product.image} alt={product.name} fluid />\n                        </Card>\n                    </Col>\n\n                    <Col className=\"my-1\" md={6} xl={6} >\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <h1 style={{color: '#000', textAlign: 'center'}}>{product.name}</h1>\n\n                                <div className=\"my-1\" align=\"center\">\n                                <RatingComponent value={product.rating} \n                                text={`${product.numReviews} reviews`} \n                                color={'#f16100'} \n                                style={{textAlign: 'center'}} />\n                                </div>\n                                \n\n                                <h5 style={{textAlign: 'center'}}>KES {commafy(Number(product.price))}</h5>\n\n                            </ListGroup.Item>\n\n                            <ListGroup.Item className=\"my-2 mb-2\">\n                                <Row>\n                                    <Col>\n                                        <Row>\n                                            <Col className='text-start'>\n                                                <h5>QUANTITY</h5>\n                                            </Col> \n                                            <Col className='text-end'>\n                                                {\n                                                    product.countInStock > 0 \n                                                        ? <h6><Badge bg=\"success\">In Stock</Badge></h6> \n                                                        : <h6><Badge bg=\"danger\">SOLD OUT</Badge></h6>\n                                                }\n                                            </Col>   \n                                        </Row>\n                                        \n                                        <Row>\n                                            <Col md={3} xs={4}>\n                                                <Form.Control as=\"select\" value={Qty}\n                                                onChange={(e) => setQty(e.target.value)}>\n                                                {  \n                                                    //create quantity off of countInStock\n                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                        <option key={x +1} value={x + 1}>\n                                                            {x + 1}\n                                                        </option>\n                                                    ))\n                                                }\n                                                </Form.Control>\n                                            </Col>\n\n                                            <Col md={9} xs={8}>\n                                                <div className=\"d-grid gap-2 \">\n                                                    <Button \n                                                        onClick={addToCartHandler}\n                                                        disabled={product.countInStock == 0}\n                                                        type=\"button\">\n                                                        Add To Cart\n                                                    </Button>\n                                                </div>\n                                            </Col>\n\n                                        </Row>\n                                    </Col>\n                                </Row>       \n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Accordion defaultActiveKey=\"0\">\n                                    <Accordion.Item eventKey=\"0\">\n                                        <Accordion.Header>Description</Accordion.Header>\n                                        <Accordion.Body>\n                                            <p className=\"text-muted\">{product.description}</p>\n                                        </Accordion.Body>\n                                    </Accordion.Item>\n                                </Accordion>\n                            </ListGroup.Item>\n\n\n                        </ListGroup>\n                            \n                       \n                    </Col>\n\n                    \n                        \n                </Row>\n\n                {/* REVIEWS SECTION */}\n\n                <Row>\n                    \n                    <Col md={6} xl={6} md={12}>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col className='text-start'>\n                                        <h6 style={{color: \"#000\"}}>\n                                            CUSTOMER FEEDBACK\n                                        </h6>\n                                    </Col> \n                                    <Col className='text-end'>\n                                        {product.reviews.length === 0 && <h6><Badge bg=\"warning\">No reviews</Badge></h6>}\n                                        {product.reviews.length === 1 && <h6><Badge bg=\"info\">{product.reviews.length} review</Badge></h6>}\n                                        {product.reviews.length > 1 && <h6><Badge bg=\"info\">{product.reviews.length} reviews</Badge></h6>}\n                                    </Col>   \n                                </Row>\n                                    \n                            </ListGroup.Item>\n\n                                {product.reviews.map((review) => (\n                                    <ListGroup.Item key={review.slug}>\n                                        <strong>{review.created_at.substring(0, 10)} by {review.name.toLowerCase()}</strong>\n                                        <RatingComponent value={review.rating} color={'#f16100'} />\n                                        {review.rating == 1 && <p>I hate it! <i style={{color:\"#f16100\"}} class=\"fas fa-sad-cry\"></i></p>}\n                                        {review.rating == 2 && <p>I don't like it! <i style={{color:\"#f16100\"}} class=\"fas fa-sad-tear\"></i></p>}\n                                        {review.rating == 3 && <p>It's Alright <i style={{color:\"#f16100\"}} class=\"fas fa-meh-blank\"></i></p>}\n                                        {review.rating == 4 && <p>I Like it <i style={{color:\"#f16100\"}} class=\"fas fa-laugh\"></i></p>}\n                                        {review.rating == 5 && <p>I Love It <i style={{color:\"red\"}} className=\"fas fa-heart\"></i></p>}\n                                        <p>{review.comment}</p>\n\n                                    </ListGroup.Item> \n                                    \n\n                                ))}\n\n                                <ListGroup.Item>\n                                    \n                                    <h6>leave a review</h6>\n                                    \n                                    {loadingProductReview && <Loader />}\n                                    {successProductReview && <Message variant=\"success\">Review Submitted Successfully</Message>}\n                                    {errorProductReview && <Message variant=\"danger\">{errorProductReview}</Message>}\n\n                                    {userInfo ? (\n                                        <Form onSubmit={submitHandler}>\n                                            <Form.Group controlId=\"rating\">\n                                                <Row>\n                                                    <Col className='text-start'>\n                                                        <div className={classes.root}>\n                                                            <Form.Control\n                                                                as=\"none\"\n                                                                value={rating}\n                                                                onChange={(e) => {\n                                                                    setRating(e.target.value);\n                                                                }}>\n                                                                <Rating style={{color: \"#f16100\"}}\n                                                                    name=\"rating-feedback\"\n                                                                    value={rating}\n                                                                    precision={1}\n                                                                    onChange={(e) => \n                                                                        setRating(e.target.value)\n                                                                    }\n                                                                    onChangeActive={(event, newHover) => {\n                                                                        setHover(newHover);\n                                                                    }}\n                                                                />\n                                                            </Form.Control>  \n                                                        </div>\n                                                    </Col>\n\n                                                    <Col className='text-end'>\n                                                        {rating !== null && <Box ml={2}>{labels[hover !== -1 ? hover : rating]}</Box>}\n                                                    </Col>\n                                                </Row>\n                                            </Form.Group> \n\n                                            <Form.Group controlId=\"comment\">\n                                                <Form.Label>Review</Form.Label>\n                                                <Form.Control\n                                                    placeholder=\"Tell us more about your rating...\"\n                                                    as=\"textarea\"\n                                                    row='5'\n                                                    value={comment}\n                                                    onChange={(e) => setComment(e.target.value)}>\n                                                </Form.Control>\n                                            </Form.Group>\n                                            \n                                            <div className=\"d-grid gap-2 \">\n                                                <Button \n                                                    className=\"my-2\"\n                                                    disabled={loadingProductReview}\n                                                    type=\"submit\">\n                                                        submit your review\n                                                </Button>\n                                            </div>\n                                            \n\n                                        </Form>\n                                      \n                                        \n                                    ) : (\n                                        <Message variant=\"info\">\n                                            Please <Link to=\"/login\">login</Link> to review this product\n                                        </Message>\n                                    )}\n                                </ListGroup.Item>\n                            \n                        </ListGroup>\n                        \n                    </Col>\n\n                </Row>\n\n\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProductScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\n\nfunction EmptyCart() {\n    return (\n        <div className=\"pt-5\" style={{textAlign: \"center\", alignContent: \"center\"}}>\n            <Row>\n                <i style={{fontSize: \"12rem\", color: '#f16100'}} class=\"fas fa-cart-arrow-down\"></i>\n                \n            </Row>\n            \n            <Link to='/shop' className='btn btn-outline-secondary my-3'>Add Items to Cart</Link>\n          \n            \n        </div>\n    )\n}\n\nexport default EmptyCart\n","import axios from 'axios'\nimport { CART_ADD_ITEM, \n    CART_REMOVE_ITEM, \n    CART_SAVE_SHIPPING_ADDRESS,\n\n    CART_SAVE_PAYMENT_METHOD\n } from '../constants/cartConstants'\n\n\nexport const addToCart = (id , Qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data.slug,\n            name:data.name,\n            image:data.image,\n            price:data.price,\n            countInStock:data.countInStock,\n            Qty\n\n        }\n    })\n    // add cart items to local storage\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id,\n        \n    })\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data,\n        \n    })\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data,\n        \n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport { Message } from '../components/Message'\nimport EmptyCart from '../components/EmptyCart'\n\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\n// adds commas to price\nimport { commafy } from '../constants/cartConstants'\n\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n    const Qty = location.search ? Number(location.search.split('=')[1]) : 1 //split to get number ordered\n    \n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const cart = useSelector(state => state.cart)\n    const { cartItems } = cart\n    console.log('cartItems', cartItems)\n   \n    useEffect(() => {\n        \n        if(productId) {\n            dispatch(addToCart(productId, Qty))\n        }\n        \n        \n    }, [dispatch, productId, Qty, userInfo, history]) //add to local storage using dispatch\n\n    //removes product from cart -- Check in cartReducer\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const checkOutHandler = () => {\n        if(!userInfo) {\n            history.push('/login?redirect=shop/shipping')\n        } else {\n            history.push('/shipping')\n        }\n    }\n\n    return (\n        <div>\n            {cartItems.length === 0 ? (\n                    \n                    <EmptyCart/ > \n                    \n                ) : (\n                    <div>\n                        <Row>\n                            <Col className=\"my-2\">\n                                <h3 style={{color: '#f16100', padding: 3}}>Cart({cartItems.reduce((acc, item) => acc + item.Qty, 0)}) items</h3>\n                            </Col>\n                            \n                        </Row>\n                        {/* <Row>\n                            <Col xs={2} xl={2}>\n                                <p className='text-muted'>Product</p>\n                            </Col>\n                            <Col xs={2} xl={3}>\n                                <p className='text-muted'></p>\n                            </Col>\n\n                            <Col xs='auto' xl={2} className='my-1'>\n                                <p className='text-muted'>Qty</p>\n                            </Col>\n\n                            <Col xs={3} xl={2}>\n                                <p className='text-muted'>Total</p>\n                            </Col>\n                            <hr></hr>\n\n                        </Row> */}\n                        <Row>\n                            <Col>\n                                <ListGroup variant=\"flush\">\n                                    {cartItems.map(item => (\n                                        <ListGroup.Item style={{backgroundColor: \"#f0f0f0\"}} key={item.product}>\n                                            <Row>\n                                                <Col xs={3} xl={3}>\n                                                    <Link to={`/product/${item.product}`}><Image src={item.image} alt={item.name} fluid/></Link>\n                                                </Col>\n\n                                                <Col xs={4} xl={3} className=\"text-start\">\n                                                    <ul>\n                                                        <li>\n                                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                        </li>\n                                                        <li>\n                                                        KES {commafy(item.price)}\n                                                        </li>\n                                                    \n                                                    </ul>\n                                                    \n                                                </Col>\n\n                                               \n\n                                                <Col  md=\"auto\" xs=\"auto\" xl={3} className='my-1'>\n                                                    <Form.Control as=\"select\"\n                                                        title=\"How many do you prefer?\" \n                                                        value={item.Qty}\n                                                        onChange={(e) => dispatch(addToCart(item.product, Number(e.target.value)))}>\n                                                            {  \n                                                            // create quantity off of countInStock\n                                                            [...Array(item.countInStock).keys()].map((x) => (\n                                                                <option key={x +1} value={x + 1}>\n                                                                    {x + 1}\n                                                                </option>\n                                                            ))\n                                                            }\n                                                    </Form.Control>\n                                                </Col>\n\n                                                <Col xs={1} xl={3} className=\"my-3\">\n                                                    \n                                                    <i className=\"fas fa-trash-alt\"\n                                                        title=\"remove item from cart\"\n                                                        style={{color: '#FF0000'}}\n                                                        type=\"button\"\n                                                        variant=\"danger\"\n                                                        onClick={() => removeFromCartHandler(item.product)}>\n                                                    </i>\n                                                    \n                                                </Col>\n                                                \n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            </Col>          \n                        \n\n                        \n                            \n                            <Col md={6} xl={4} className=\"my-2\">\n                                <Card>\n                                    <ListGroup variant='flush'>\n                                \n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>\n                                                SubTotal:\n                                                </Col>\n                                                <Col>\n                                                    {/* Adds quantity of each products and add them together with other products  */}\n                                                    KES {commafy(cartItems.reduce((acc, item) => acc + item.Qty * item.price, 0).toFixed(2))} {/*  toFixed sets max decimals to the right  */}\n                                                </Col>\n                                                \n                                            </Row>\n                                        </ListGroup.Item>\n                                    \n                                        \n                                        <ListGroup.Item>\n                                            <Row align=\"center\">\n                                                <Col md={6}>\n                                                    <Link to='/shop' className='btn btn-outline-secondary my-3'>Continue shopping</Link>\n                                                </Col>\n\n                                                <Col md={6}>\n                                                    <Button\n                                                        type='button'\n                                                        className='btn btn-primary my-3'\n                                                        disabled={cartItems.length === 0}\n                                                        onClick={checkOutHandler}>\n                                                        PROCEED TO CHECKOUT\n                                                    </Button>   \n                                                </Col>\n\n                                            </Row>\n                                            \n                                            \n                                        </ListGroup.Item>\n                                       \n                                    \n                                    </ListGroup>\n                                </Card>\n                            </Col>\n                        </Row>\n                \n                    </div>\n                )}\n            </div>\n    )\n}\n\nexport default CartScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, InputGroup} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport { login } from '../actions/userActions'\n\nfunction LoginScreen({location, history}) {\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    //redirect to page of choice if user is logged in\n    const redirect = location.search ? location.search.split('='[1]) : '/shop'\n\n    //get state\n    const userLogin = useSelector(state => state.userLogin)\n    const {error, loading, userInfo} = userLogin\n\n    //show or hide password\n    const [isReaveled, setIsRevealed] = useState(false)\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(email, password))\n    }\n\n\n    return (\n        <FormContainer>\n            <h3>SIGN IN</h3>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control \n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='password' className='my-2'>\n                            \n                            <Form.Label>Password</Form.Label>\n                                <InputGroup className=\"mb-3\">\n                                    <Form.Control \n                                        required\n                                        type={isReaveled ? \"text\" : \"password\"}\n                                        placeholder='Enter Password'\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}>\n                                        \n                                    </Form.Control>\n                                <InputGroup.Text id=\"hide-show-pwd\" \n                                    title={isReaveled ? \"Hide password\" : \"Show Password\"}\n                                    onClick={() => setIsRevealed(prevState => !prevState)}>\n                                    {isReaveled ? \n                                        <i className='fas fa-eye-slash'></i> : <i className='fas fa-eye'></i>}\n                                </InputGroup.Text>\n\n                            </InputGroup>                          \n                        </Form.Group>\n                <div className=\"d-grid gap-2 my-2\" align=\"center\">\n                    <Button type='submit' align=\"center\" className='d-grid gap-2 my-3'>\n                        Sign In\n                    </Button>\n                </div>\n\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                    New Customer? \n                    <Link \n                        to={redirect ? `/register?redirect=${redirect}`\n                        : '/register'}> Register \n                    </Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, InputGroup, Image } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport { register } from '../actions/userActions'\n\nfunction RegisterScreen({ location, history }) {\n\n    const [first_name, setFirstName] = useState('')\n    const [last_name, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone_number, setPhoneNumber] = useState('')\n    const [password, setPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const [isReaveled, setIsRevealed] = useState(false)\n\n    const dispatch = useDispatch()\n\n    //redirect to page of choice if user is logged in\n    const redirect = location.search ? location.search.split('='[1]) : '/shop'\n\n    //get state\n    const userRegister = useSelector(state => state.userRegister)\n    const {error, loading, userInfo} = userRegister\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(register(first_name, last_name, email, phone_number, password))\n    }\n\n\n\n    return (\n        <FormContainer>\n            <h3>Create Account</h3>\n            {/* {message && <} */}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <Form onSubmit={submitHandler}>\n                <Row>\n                    <Col sm={12} md={6} xl={6}>\n                        <Form.Group controlId='first_name' className=\"my-2\">\n                            <Form.Label>First Name</Form.Label>\n                            <Form.Control \n                                required\n                                type='text'\n                                placeholder='Enter First Name'\n                                value={first_name}\n                                onChange={(e) => setFirstName(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                    <Col sm={12} md={6} xl={6}>\n                        <Form.Group controlId='last_name' className=\"my-2\">\n                            <Form.Label>Last Name</Form.Label>\n                            <Form.Control \n                                required\n                                type='text'\n                                placeholder='Enter Last Name'\n                                value={last_name}\n                                onChange={(e) => setLastName(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n                    </Col>\n                </Row>\n                <Row>\n                    <Form.Group controlId='email' className='my-2'>\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control \n                            required\n                            type='email'\n                            placeholder='Enter Email Address'\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}>\n                        </Form.Control>\n                    </Form.Group>\n                </Row>\n\n                <Row>\n                    <Col sm={12} md={6} xl={6}>\n                        <Form.Group controlId='phone_number' className='my-2'>\n                            <Form.Label>Phone Number</Form.Label>\n                            <InputGroup>\n                                <InputGroup.Text id=\"inputGroupPrepend\">+254</InputGroup.Text>\n                            \n                                <Form.Control \n                                    type=\"number\"\n                                    maxLength=\"9\"\n                                    aria-describedby=\"inputGroupPrepend\"\n                                    placeholder='Phone Number(Optional)'\n                                    value={phone_number}\n                                    onChange={(e) => setPhoneNumber(e.target.value)}>\n                                </Form.Control>\n                            </InputGroup>\n                        </Form.Group>\n                    </Col>\n\n                    <Col sm={12} md={6} xl={6}>\n                        <Form.Group controlId='password' className='my-2'>\n                            \n                            <Form.Label>Password</Form.Label>\n                                <InputGroup className=\"mb-3\">\n                                    <Form.Control \n                                        required\n                                        type={isReaveled ? \"text\" : \"password\"}\n                                        placeholder='Enter Password'\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}>\n                                        \n                                    </Form.Control>\n                                <InputGroup.Text id=\"hide-show-pwd\" \n                                    title={isReaveled ? \"Hide password\" : \"Show Password\"}\n                                    onClick={() => setIsRevealed(prevState => !prevState)}>\n                                    {isReaveled ? \n                                        <i className='fas fa-eye-slash'></i> : <i className='fas fa-eye'></i>}\n                                </InputGroup.Text>\n\n                            </InputGroup>                          \n                        </Form.Group>\n                    </Col>\n                </Row>\n                \n                \n                                \n                               \n\n                         \n                \n                <div className=\"d-grid gap-2 my-2\">\n                    <Button type='submit' size='md'>\n                        Sign In\n                    </Button>\n                </div>\n                \n\n            </Form>            \n        </FormContainer>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport { Form, Button, Row, Col, InputGroup, Container, Tab, Tabs, Table, Card, Image, Badge } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nimport { listMyOrders } from '../actions/orderActions'\nimport { commafy } from '../constants/cartConstants'\n\n\n\nfunction ProfileScreen({ match, history }) {\n\n    \n    const [first_name, setFirstName] = useState('')\n    const [last_name, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone_number, setPhoneNumber] = useState('')\n    const [password, setPassword] = useState('')\n    const [comfirmPassword, setComfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const [isReaveled, setIsRevealed] = useState(false)\n\n    const dispatch = useDispatch()\n\n    //get state\n    const userDetails = useSelector(state => state.userDetails)\n    const {error, loading, user} = userDetails\n\n    //make sure user is logged in\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    //refresh state\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    //get orders\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(!user || success || userInfo.slug !== user.slug ) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails(userInfo.slug))\n                dispatch(listMyOrders())\n\n            } else {\n                setFirstName(user.first_name)\n                setLastName(user.last_name)\n                setEmail(user.email)\n                setPhoneNumber(user.phone_number)\n                \n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        if(password != comfirmPassword) {\n            setMessage('Passwords do not match')\n\n        } else {\n            dispatch(updateUserProfile( {\n                'id': user.id,\n                'first_name': first_name,\n                'last_name': last_name,\n                'email': email,\n                'phone_number': phone_number,\n                'password': password\n\n            }))\n            setMessage('')\n        }\n        \n    }\n\n\n\n    return (\n        <Container>\n            <Row className='justify-content-md-center my-4'>\n                <Col xs={12} md={8}>\n\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    {loading && <Loader />}\n\n                    <Tabs defaultActiveKey=\"/profile\">\n                        <Tab eventKey='/profile' title=\"Update Profile\">\n                            <Form onSubmit={submitHandler} className=\"my-4\">\n                                <Row>\n                                    <Col sm={12} md={6} xl={6}>\n                                        <Form.Group controlId='first_name' className=\"my-2\">\n                                            <Form.Label>First Name</Form.Label>\n                                            <Form.Control \n                                                required\n                                                type='text'\n                                                placeholder='Enter First Name'\n                                                value={first_name}\n                                                onChange={(e) => setFirstName(e.target.value)}>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={12} md={6} xl={6}>\n                                        <Form.Group controlId='last_name' className=\"my-2\">\n                                            <Form.Label>Last Name</Form.Label>\n                                            <Form.Control \n                                                required\n                                                type='text'\n                                                placeholder='Enter Last Name'\n                                                value={last_name}\n                                                onChange={(e) => setLastName(e.target.value)}>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n                                <Row>\n                                    <Col sm={12} md={6} xl={6}>\n                                        <Form.Group controlId='email' className='my-2'>\n                                            <Form.Label>Email</Form.Label>\n                                            <Form.Control \n                                                required\n                                                type='email'\n                                                placeholder='Enter Email Address'\n                                                value={email}\n                                                onChange={(e) => setEmail(e.target.value)}>\n                                            </Form.Control>\n                                        </Form.Group>\n                                    </Col>\n                                    <Col sm={12} md={6} xl={6}>\n                                        <Form.Group controlId='phone_number' className='my-2'>\n                                            <Form.Label>Phone Number</Form.Label>\n                                            <InputGroup>\n                                                <InputGroup.Text id=\"inputGroupPrepend\">\n                                                    <i className=\"fas fa-phone\"></i>\n                                                </InputGroup.Text>\n                                            \n                                                <Form.Control \n                                                    type=\"text\"\n                                                    maxLength=\"13\"\n                                                    aria-describedby=\"inputGroupPrepend\"\n                                                    placeholder='Phone Number(Optional)'\n                                                    value={phone_number}\n                                                    onChange={(e) => setPhoneNumber(e.target.value)}>\n                                                </Form.Control>\n                                            </InputGroup>\n                                        </Form.Group>\n                                    </Col>\n                                </Row>\n\n                                <Row>\n                                    <Col sm={12} md={6} xl={6}>\n                                        <Form.Group controlId='password' className='my-2'>\n                                            \n                                            <Form.Label>Password</Form.Label>\n                                                <InputGroup className=\"mb-3\">\n                                                    <Form.Control \n                                                        \n                                                        type={isReaveled ? \"text\" : \"password\"}\n                                                        placeholder='Enter Password'\n                                                        value={password}\n                                                        onChange={(e) => setPassword(e.target.value)}>\n                                                        \n                                                    </Form.Control>\n                                                <InputGroup.Text id=\"hide-show-pwd\" \n                                                    title={isReaveled ? \"Hide password\" : \"Show Password\"}\n                                                    onClick={() => setIsRevealed(prevState => !prevState)}>\n                                                    {isReaveled ? \n                                                        <i className='fas fa-eye-slash'></i> : <i className='fas fa-eye'></i>}\n                                                </InputGroup.Text>\n\n                                            </InputGroup>                          \n                                        </Form.Group>\n                                    </Col>\n\n\n                                    <Col sm={12} md={6} xl={6}>\n                                        <Form.Group controlId='comfirmPassword' className='my-2'>\n                                            \n                                            <Form.Label>Comfirm Password</Form.Label>\n                                                <InputGroup className=\"mb-3\">\n                                                    <Form.Control \n                                                        \n                                                        type={isReaveled ? \"text\" : \"password\"}\n                                                        placeholder='Comfirm Password'\n                                                        value={comfirmPassword}\n                                                        onChange={(e) => setComfirmPassword(e.target.value)}>\n                                                        \n                                                    </Form.Control>\n                                                <InputGroup.Text id=\"hide-show-pwd\" \n                                                    title={isReaveled ? \"Hide password\" : \"Show Password\"}\n                                                    onClick={() => setIsRevealed(prevState => !prevState)}>\n                                                    {isReaveled ? \n                                                        <i className='fas fa-eye-slash'></i> : <i className='fas fa-eye'></i>}\n                                                </InputGroup.Text>\n\n                                            </InputGroup>                          \n                                        </Form.Group>\n                                        \n                                    </Col>\n                                        \n\n                                    \n                                </Row>\n   \n                                <div className=\"d-grid gap-2 my-2\">\n                                    <Button type='submit' variant='primary'>\n                                        Update\n                                    </Button>\n                                </div>\n                                \n\n                            </Form>            \n                        </Tab>\n\n                        <Tab eventKey='my-orders' title=\"My Orders\">\n                            {loadingOrders ? (\n                                <Loader />\n                            ) : errorOrders ? (\n                                <Message variant=\"danger\">{errorOrders}</Message>\n                            ): (\n                                <div className=\"my-4\">\n                                    <Table striped responsive className=\"table-sm\">\n                                        <thead>\n                                            <tr>\n                                                <th>Date</th>\n                                                <th>T.Price</th>\n                                                \n                                                <th>Payment method</th>\n                                                <th>Paid</th>\n                                                <th>Delivered</th>\n                                            </tr>\n                                            \n                                        </thead>\n\n                                        {orders.map(order => \n                                            <tr key={order.slug}>\n                                                <td>{order.created_at.substring(0, 10)}</td>\n                                                <td>{commafy(order.totalPrice)}</td>\n                                                \n                                                \n\n                                                <td> {order.paymentMethod === \"Paypal\" \n                                                    ? <Image src=\"https://learning-tribes.com/wp-content/uploads/2021/01/paypal-logo-png-transparent-1024x333.png\" style={{width: 70, height: 'auto'}} />\n                                                    : <Image src=\"https://www.gtbank.co.ke/uploads/transforms/general/47459/mpesa_af599ee76a60a3ffac0b778428c6ae2f.png\" style={{width: 50, height: 'auto'}} />\n                                                    }\n                                                </td>\n\n                                                <td> {order.isPaid \n                                                    ? <i class=\"fas fa-check\" style={{color: \"rgb(67, 211, 0)\"}}></i>\n                                                    : <i class=\"fas fa-times-circle\" style={{color: \"rgb(255, 0, 0)\"}}></i>\n                                                    }\n                                                </td>\n\n                                                <td>{order.isDelivered \n                                                    ? <i class=\"fas fa-check\" style={{color: \"rgb(67, 211, 0)\"}}></i> \n                                                    : <i class=\"fas fa-times-circle\" style={{color: \"rgb(255, 0, 0)\"}}></i>\n                                                }\n                                                </td>\n                                                <td>\n                                                    <Link to={`order-details/${order.slug}`}>\n                                                    <Button variant=\"primary\" \n                                                        className=\"btn-sm\"\n                                                        title=\"See order details\">\n                                                        See Details \n                                                    </Button>\n                                                    </Link>\n                                                </td>\n                                            </tr>\n                                        )}\n                                    </Table>\n\n\n\n\n                                \n                                    \n\n                            \n                                        \n                                </div>\n                                \n                            )}\n                        </Tab>\n\n                    </Tabs>                    \n                </Col>\n            </Row>\n        </Container>\n\n\n        \n    )\n}\n\nexport default ProfileScreen\n\n\n\n\n                                        \n\n\n\n                                                // <tr key={order.slug}>\n                                                //     <td>{order._id.substring(0, 8)}...</td>\n                                                //     <td>{commafy(order.totalPrice)}</td>\n                                                //     <td>{order.created_at.substring(0, 10)}</td>\n                                                \n                                                //     <td>{order.isPaid ? \n\n                                                //         <p style={{color: \"green\"}}>{order.paidAt.substring(0, 10)}</p> : (\n                                                //         <i style={{color: \"red\"}}>Not Paid</i>\n                                                //     )}\n                                                //     </td>\n\n                                                //     <td>{order.isDelivered ? \n                                                //         <p style={{color: \"green\"}}>Delivered</p> : (\n                                                //         <i style={{color: \"red\"}}>Not Delivered</i>\n                                                //     )}\n                                                //     </td>\n                                                //     <td>\n                                                //         <LinkContainer to={`orders/${order.slug}`}>\n                                                //             <Button className=\"btn-sm\">Details</Button>\n                                                //         </LinkContainer>\n                                                //     </td>\n                                                // </tr>\n","import axios from 'axios'\n\nimport { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n\n} from '../constants/orderConstants'\n\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.post(\n            `/api/orders/add`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        //clear cart\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.get(\n            `/api/orders/${id}`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.put(\n            `/api/orders/pay/${id}`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.get(\n            `/api/myorders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.get(\n            `/api/orders`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        \n        const { data } = await axios.put(\n            `/api/orders/deliver/${order.slug}`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n    } catch(error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({step1, step2, step3, step4}) {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item >\n                { step1 ? (\n                    <LinkContainer to=\"/login\">\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n\n                ) : (\n\n                    <Nav.Link disabled>Login</Nav.Link>\n                )}\n                \n            </Nav.Item>\n\n            <Nav.Item>\n                { step2 ? (\n                    <LinkContainer to=\"/shipping\">\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n\n                ) : (\n\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n                \n            </Nav.Item>\n\n            <Nav.Item>\n                { step3 ? (\n                    <LinkContainer to=\"/payment\">\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n\n                ) : (\n\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n                \n            </Nav.Item>\n\n            <Nav.Item>\n                { step4 ? (\n                    <LinkContainer to=\"/placeorder\">\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n\n                ) : (\n\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n                \n            </Nav.Item>\n            \n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, InputGroup, Image } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { saveShippingAddress } from '../actions/cartActions'\n\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    \n\n    const [county, setCounty] = useState(shippingAddress.county)\n    const [subCounty, setsubCounty] = useState(shippingAddress.subCounty)\n    const [ward, setWard] = useState(shippingAddress.ward)\n    const [shippingCompany, setShippingCompany] = useState(shippingAddress.shippingCompany)\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ county, subCounty, ward, shippingCompany }))\n        history.push('/payment')\n        console.log('Submitted')\n    }\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        }\n    }, [userInfo])\n\n    return (\n        <FormContainer>\n            {/* load in CheckoutSteps component */}\n            <CheckoutSteps step1 step2/>\n            <h4 className=\"my-2\">Shipping Info</h4>\n            <Form> \n                <Form.Group controlId='county' className=\"my-2\">\n                <Form.Label>County</Form.Label>\n                    <Form.Control as=\"select\"\n                        value={county ? county : \"\"}\n                        onChange={(e) => setCounty(e.target.value)}>\n                            \n\n                            <option>Mombasa</option>\n                            <option>Kwale</option>\n                            <option>Kilifi</option>\n                            <option>Tana River</option>\n                            <option>Lamu</option>\n                            <option>Taita-Taveta</option>\n                            <option>Garissa</option>\n                            <option>Wajir</option>\n                            <option>Mandera</option>\n                            <option>Marsabit</option>\n                            <option>Isiolo</option>\n                            <option>Meru</option>\n                            <option>Tharaka-Nithi</option>\n                            <option>Embu</option>\n                            <option>Kitui</option>\n                            <option>Machakos</option>\n                            <option>Makueni</option>\n                            <option>Nyandarua</option>\n                            <option>Nyeri</option>\n                            <option>Kirinyaga</option>\n                            <option>Murang'a</option>\n                            <option>Kiambu</option>\n                            <option>Turkana</option>\n                            <option>West Pokot</option>\n                            <option>Samburu</option>\n                            <option>Trans Nzoia</option>\n                            <option>Uasin Gishu</option>\n                            <option>Elgeyo-Marakwet</option>\n                            <option>Nandi</option>\n                            <option>Baringo</option>\n                            <option>Laikipia</option>\n                            <option>Nakuru</option>\n                            <option>Narok</option>\n                            <option>Kajiado</option>\n                            <option>Kericho</option>\n                            <option>Bomet</option>\n                            <option>Kakamega</option>\n                            <option>Vihiga</option>\n                            <option>Bungoma</option>\n                            <option>Busia</option>\n                            <option>Siaya</option>\n                            <option>Kisumu</option>\n                            <option>Homa Bay</option>\n                            <option>Migori</option>\n                            <option>Kisii</option>\n                            <option>Nyamira</option>\n                            <option>Nairobi</option>    \n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='county' className=\"my-2\">\n                    <Form.Label>Sub County(constituency)</Form.Label>\n                    <Form.Control \n                        required\n                        type='text'\n                        placeholder='Enter constituency'\n                        value={subCounty ? subCounty : ''}\n                        onChange={(e) => setsubCounty(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='ward' className=\"my-2\">\n                    <Form.Label>Ward</Form.Label>\n                    <Form.Control \n                        required\n                        type='text'\n                        placeholder='Enter ward'\n                        value={ward ? ward : ''}\n                        onChange={(e) => setWard(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"shipping\" className=\"my-2\">\n                    <Form.Label>Shipping Company</Form.Label>\n                    <Form.Control \n                        required\n                        type='text'\n                        placeholder='Ship with..'\n                        value={shippingCompany ? shippingCompany : ''}\n                        onChange={(e) => setShippingCompany(e.target.value)}>\n                    </Form.Control>\n                </Form.Group>\n\n                <Button \n                    type=\"submit\" \n                    variant=\"primary\"\n                    onClick={submitHandler}>\n                        Next\n                </Button>\n\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, InputGroup, Col, Card, Image, Row } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { savePaymentMethod } from '../actions/cartActions'\n\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\n\n\n\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('')\n\n    if (!shippingAddress.county) {\n        history.push('/shipping')\n\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n    \n\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n            <Form onSubmit={submitHandler}>\n                <Form.Group>\n                    <Form.Label>Choose a Payment Method</Form.Label>\n                        <Card style={{padding: 15, backgroundColor: \"white\"}}>\n                            <Row>\n                                <Col md={10} xs={8}>\n                                    <Form.Check\n                                        checked=\"\" \n                                        type=\"radio\"\n                                        value=\"M-Pesa\"\n                                        label='Mpesa'\n                                        id=\"mpesa\"\n                                        name=\"mpesaMethod\"\n                                        onChange={(e) => setPaymentMethod(e.target.value)}\n                                        >\n                                            \n                                    </Form.Check>\n                                </Col>\n                                <Col md={2} xs={4}>\n                                    <Image src=\"https://www.gtbank.co.ke/uploads/transforms/general/47459/mpesa_af599ee76a60a3ffac0b778428c6ae2f.png\" style={{width: 50, height: 'auto'}} />\n                                </Col>\n                                \n                            </Row>\n                            \n                            \n                            \n                           \n                        </Card>\n                        \n                        <Card style={{padding: 15, backgroundColor: \"white\"}} className=\"my-3\">\n                            <Row>\n                                <Col md={10} xs={8}>\n                                    <Form.Check\n                                        type=\"radio\"\n                                        value=\"Paypal\"\n                                        label='PayPal or Credit Card'\n                                        id=\"paypal\"\n                                        name=\"paypalMethod\"\n                                        onChange={(e) => setPaymentMethod(e.target.value)}\n                                        >\n                                        \n\n                                    </Form.Check>\n                                </Col>\n                            \n                                <Col md={2} xs={4}>\n                                    <Image src=\"https://learning-tribes.com/wp-content/uploads/2021/01/paypal-logo-png-transparent-1024x333.png\" style={{width: 70, height: 'auto'}} />\n                                </Col>\n\n                            </Row>\n                        </Card>\n                        \n\n                        {/* <fieldset class=\"form-group\">\n                            <legend class=\"mt-4\">Radio buttons</legend>\n                            <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                    <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios1\" value=\"option1\" checked=\"\">\n                                    Option one is this and that—be sure to include why it's great\n                                </label>\n                            </div>\n                            <div class=\"form-check\">\n                                <label class=\"form-check-label\">\n                                    <input type=\"radio\" class=\"form-check-input\" name=\"optionsRadios\" id=\"optionsRadios2\" value=\"option2\">\n                                    Option two can be something else and selecting it will deselect option one\n                                </label>\n                            </div>\n                        </fieldset> */}\n\n                    \n                \n                </Form.Group>\n\n                <Button type=\"submit\" variant=\"primary\">\n                    Next\n                </Button>\n\n            </Form>\n            \n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, ListGroup, Card, Image, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { createOrder } from '../actions/orderActions'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\n// adds commas to price\nimport { commafy } from '../constants/cartConstants'\n//reset orders\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\n\nfunction PlaceOrderScreen({ history }) {\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const {order, error, success} = orderCreate\n    \n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    \n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.Qty * item.price, 0)\n    cart.shippingPrice = (cart.itemsPrice > 5500 ? 0 : 300)\n    cart.taxPrice = cart.itemsPrice * 0.16\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice))\n\n    \n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        }\n        \n        if(success) {\n            history.push(`/orders/${order.slug}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        } else {\n            if(!cart.paymentMethod) {\n                history.push('/payment')\n            } \n        }\n    }, [success, history])\n\n    const placeOrder = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n        console.log(\"order placed\")\n        \n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h4>Shipping</h4>\n                            <p>\n                                <strong>Shipping To: </strong>\n                                {cart.shippingAddress.county}, {cart.shippingAddress.subCounty}, {cart.shippingAddress.ward}\n                            </p>\n                            <p>\n                                <strong>Shipping By: </strong>\n                                {cart.shippingAddress.shippingCompany}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h4>Payment Method</h4>\n                            <p>\n                                <strong>Method: </strong>\n                                    {cart.paymentMethod ? (\"\") : (\"Choose Payment Method\")}  \n                                    \n                                    {cart.paymentMethod === \"M-Pesa\" ?  \n                                        <Image src=\"https://www.gtbank.co.ke/uploads/transforms/general/47459/mpesa_af599ee76a60a3ffac0b778428c6ae2f.png\" style={{width: 50, height: 'auto'}} />\n                                        : (\"\" )\n                                    }\n                                    {cart.paymentMethod === \"Paypal\" ?  \n                                        <Image src=\"http://era-techuk.com/wp-content/uploads/2019/03/pypel-768x290.jpg\" style={{width: 70, height: 'auto'}} />\n                                        : (\"\" )\n                                    }         \n                                \n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h4>Order Items</h4>\n\n                            { cart.cartItems.length === 0 ? <Message variant=\"warning\">\n                                Your cart is empty <Link to='/shop'>Add Items to Cart</Link>\n                            </Message> : (\n                                <ListGroup variant=\"flush\">\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col xs={2} xl={2}>\n                                                    <Link to={`/product/${item.product}`}><Image src={item.image} alt={item.name} style={{width: 50, height: 'auto'}} thumbnail responsive/></Link>\n                                                </Col>\n\n                                                <Col xs={3} xl={3}>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                               \n                                                <Col xs={4} xl={3}>\n                                                    {item.Qty} x {commafy(item.price)}\n                                                </Col>\n\n                                                <Col xs={3} xl={4}>\n                                                    {commafy((item.Qty * item.price).toFixed(2))}\n                                                </Col>\n\n                                                {/* <Col xs={1} xl={1}>\n                                                    \n                                                    <i className=\"fas fa-trash-alt\"\n                                                        title=\"remove item from cart\"\n                                                        style={{color: '#FF0000'}}\n                                                        type=\"button\"\n                                                        variant=\"danger\"\n                                                        onClick={() => removeFromCartHandler(item.product)}>\n                                                    </i>\n                                                    \n                                                </Col> */}\n                                                \n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                            \n                        </ListGroup.Item>\n                    </ListGroup>\n\n                </Col>\n\n                <Col md={4} className=\"my-2\">      \n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            {error && <Message variant=\"danger\">{error}</Message>}\n                            <ListGroup.Item>\n                                <h3>Order Summary</h3>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>KES {commafy(Number(cart.itemsPrice).toFixed(2))}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>KES {commafy(Number(cart.shippingPrice).toFixed(2))} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>KES {commafy(Number(cart.taxPrice).toFixed(2))} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>KES {commafy(Number(cart.totalPrice).toFixed(2))} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <div className=\"d-grid gap-2 my-2\">\n                                    <Button \n                                        type=\"button\"\n                                        disabled={cart.cartItems === 0}\n                                        onClick={placeOrder}>\n                                        Place Order\n                                    </Button>\n                                </div>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n\n                </Col>\n            </Row>\n            \n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, ListGroup, Card, Image, Col, Badge, Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { PayPalButton } from \"react-paypal-button-v2\";\n\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n// adds commas to price\nimport { commafy } from '../constants/cartConstants'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\nimport { mpesaStkPush } from '../actions/mpesaAction';\n\n\n\nfunction OrderDetailsScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const stkPush = useSelector(state => state.stkPush)\n    const { loading: loadingStkPush, success: successStkPush, error: errorStkPush } = stkPush\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    \n    \n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)\n    }\n\n    // paypal payments\n    const addPayPalScript = () => {\n        const script = document.createElement('script')\n        script.type = 'text/javascript'\n        script.src = \"https://www.paypal.com/sdk/js?client-id=AXI6IiovmA6YeA7lky_hOgAWGfYNl5ZLsBrcD2j4gZjZyq7xQxf7D9_w5DoqxFyHbh_7GW6HIWOCtq4q\"\n        script.async = true\n        script.onload = () => {\n            setSdkReady(true)\n        }\n        document.body.appendChild(script)\n    }\n\n\n    useEffect(() => {\n\n        if(!userInfo) {\n            history.push('/login')\n        }\n\n        if(!order || successPay || order.slug !== orderId|| successDeliver)  {\n            dispatch({type: ORDER_PAY_RESET})\n            dispatch({type: ORDER_DELIVER_RESET})\n\n            dispatch(getOrderDetails(orderId))\n\n        } else if(!order.isPaid) {\n            if(!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }          \n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const stkPushHandler = () => {\n        dispatch(mpesaStkPush())\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    \n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n    ) : (\n        <div>\n            <p className=\"my-4\">Order No: <span style={{color: '#f16100'}}>{order._id}</span></p>\n            <Row>\n                <Col md={8} className=\"my-2\">\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h4>Shipping</h4> \n                            <p>Shipping To: {order.shippingAddress.county}, {order.shippingAddress.subCounty}, {order.shippingAddress.ward}</p>\n                            <p>Phone Number: ({order.user.phone_number})</p>\n                            <p>Email: <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                            {order.isDelivered \n                                ? <p><Badge bg=\"success\">Delivered on {order.deliveredAt.substring(0, 10)}</Badge></p>\n                                : <p>Delivered: <i class=\"fas fa-times-circle\" style={{color: \"rgb(255, 0, 0)\"}}></i></p>\n                            }\n                            \n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h4>Payment Method</h4>\n                            <p>\n                                <strong>Method: </strong>\n                                    {order.paymentMethod ? (\"\") : (\"Choose Payment Method\")}\n                                      \n                                    {order.paymentMethod === \"M-Pesa\" ?\n                                        <Image src=\"https://www.gtbank.co.ke/uploads/transforms/general/47459/mpesa_af599ee76a60a3ffac0b778428c6ae2f.png\" style={{width: 50, height: 'auto'}} />\n                                        : (\"\")\n                                    }\n                                    \n                                    {order.paymentMethod === \"Paypal\" ?  \n                                        <Image src=\"https://learning-tribes.com/wp-content/uploads/2021/01/paypal-logo-png-transparent-1024x333.png\" style={{width: 70, height: 'auto'}} />\n                                        : (\"\")\n                                        // order.user.email\n                                    }    \n                            </p>\n                           \n                            {order.isPaid \n                                ? <p><Badge bg=\"success\">Paid on {order.paidAt.substring(0, 10)}</Badge></p>\n                                : <p>Paid: <i class=\"fas fa-times-circle\" style={{color: \"rgb(255, 0, 0)\"}}></i></p>\n                            }\n                           \n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h4>Items  In your Order</h4>\n\n                            { order.orderItems.length === 0 ? <Message variant=\"warning\">\n                                Your order is empty <Link to='/shop'>Add Items to order</Link>\n                            </Message> : (\n                                <ListGroup variant=\"flush\">\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col xs={2} xl={2}>\n                                                    <Link to={`/product/${item.product}`}><Image src={item.image} alt={item.name} style={{width: 50, height: 'auto'}} roundedCircle responsive/></Link>\n                                                </Col>\n\n                                                <Col xs={3} xl={3}>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n\n                                               \n                                                <Col xs={4} xl={3}>\n                                                    \n                                                    {item.qty} x {commafy(item.price)}\n                                                </Col>\n\n                                                <Col xs={3} xl={4}>\n                                                    {commafy((item.qty * item.price).toFixed(2))}\n                                                </Col>\n\n                                                {/* <Col xs={1} xl={1}>\n                                                    \n                                                    <i className=\"fas fa-trash-alt\"\n                                                        title=\"remove item from order\"\n                                                        style={{color: '#FF0000'}}\n                                                        type=\"button\"\n                                                        variant=\"danger\"\n                                                        onClick={() => removeFromorderHandler(item.product)}>\n                                                    </i>\n                                                    \n                                                </Col> */}\n                                                \n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                            \n                        </ListGroup.Item>\n                    </ListGroup>\n\n                </Col>\n\n            <Col md={4} className=\"my-2\">\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            \n                            <ListGroup.Item>\n                                <h3>Order Summary</h3>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>KES {commafy(Number(order.itemsPrice).toFixed(2))}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>KES {commafy(Number(order.shippingPrice).toFixed(2))} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>KES {commafy(Number(order.taxPrice).toFixed(2))} </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>KES {commafy(Number(order.totalPrice).toFixed(2))} </Col>\n                                </Row>\n                            </ListGroup.Item>\n                            \n                            \n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader />}\n\n                                    {order.paymentMethod === \"M-Pesa\" \n                                        ?   <div className=\"d-grid gap-2 my-2\">\n                                                <Button\n                                                    size=\"sm\"\n                                                    style={{borderRadius: '2rem'}}\n                                                    onClick={stkPushHandler}\n                                                    type='submit' \n                                                    className='btn btn-outline' \n                                                    variant=\"outline-primary\">\n                                                    <Image className='mb-2' src=\"https://cdn-images-1.medium.com/fit/t/1600/480/1*ku2fgiHHIfl_VOatvwwZGw.png\" style={{width: 150, height: 'auto'}} />\n                                                    {loadingStkPush &&  <Spinner\n                                                            style={{color: 'green'}}\n                                                            as=\"span\"\n                                                            animation=\"border\"\n                                                            size=\"sm\"\n                                                            role=\"status\"\n                                                            aria-hidden=\"true\"\n                                                        />\n                                                    }\n                                                    \n                                                </Button>\n                                            </div>\n                                            \n                                        :   <div>\n                                                {!sdkReady ? (\n                                                    <Loader />\n                                                ) : (\n                                                    <PayPalButton\n                                                        amount={order.totalPrice}\n                                                        onSuccess={successPaymentHandler} />\n                                                )}\n                                            </div>\n                                    }\n                                    {errorStkPush && <Message variant=\"danger\">{errorStkPush}</Message>}\n                                   \n\n                                    \n                                </ListGroup.Item>\n                            )}\n                            <ListGroup.Item>\n                                    {successStkPush && <Message variant=\"success\">An stk push has been sent to your phone</Message>}\n                            </ListGroup.Item>\n\n                        </ListGroup>\n\n                        {loadingDeliver && <Loader />}\n                        {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                            <ListGroup.Item>\n                                <div className=\"d-grid gap-2 my-2\">\n                                    <Button type=\"button\"\n                                            variant=\"success\"\n                                            className=\"btn btn-block\"\n                                            onClick={deliverHandler}>\n                                        Mark as Delivered   <i class=\"fas fa-truck\"></i>\n                                    </Button>\n                                </div>\n                               \n                            </ListGroup.Item>\n                        )}\n\n\n                    </Card>\n\n                </Col>\n            </Row>\n            \n        </div>\n    )\n}\n\nexport default OrderDetailsScreen\n\n\n// {!sdkReady ? (\n//     <Loader />\n// ) : (\n//     <PayPalButton\n//         amount={order.totalPrice}\n//         onSuccess={successPaymentHandler} />\n\n// )}","import axios from 'axios'\n\nimport { \n    MPESA_STK_PUSH_REQUEST,\n    MPESA_STK_PUSH_SUCCESS, \n    MPESA_STK_PUSH_FAIL \n} \nfrom \"../constants/mpesaConstants\"\n\n\n\n\nexport const mpesaStkPush = (push) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: MPESA_STK_PUSH_REQUEST\n        })\n\n        //get current user info\n        const {\n            userLogin: { userInfo },\n        } = getState()\n        \n        //send request with token\n        const config = {\n            headers: {\n                'Content-type':'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            },\n        }\n        \n        const { data } = await axios.post(\n            `/api/payments/lnm-stk-push`,\n            push,\n            config\n        )\n\n        dispatch({\n            type: MPESA_STK_PUSH_SUCCESS,\n            payload: data\n        })\n\n    \n    } catch(error) {\n        dispatch({\n            type: MPESA_STK_PUSH_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message\n        })\n\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nimport { listUsers, deleteUser } from '../actions/userActions'\nimport { Link } from 'react-router-dom'\n\nfunction UserListScreen({history}) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = userDelete\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push(\"/shop\")\n        }\n        \n    }, [dispatch, history, userInfo, successDelete])\n\n    const deleteHandler = (id) => {\n\n        if(window.confirm(\"Are you sure you want to delete this user?\")){\n            dispatch(deleteUser(id))\n        }\n        \n    }\n        \n\n    return (\n        <div>\n            <h2 style={{color: '#000'}}>users</h2>\n\n            {loadingDelete && <Loader/ >}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n\n            {loading\n            ? <Loader />\n            : error\n            ? <Message variant=\"danger\">{error}</Message>\n            : (\n                <Table striped responsive className=\"table-sm\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Phone number</th>\n                            <th>Admin</th>\n                        </tr>\n                        \n                    </thead>\n\n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user.slug}>\n                                <td>{user.full_name}</td>\n                                <td>{user.email}</td>\n                                <td>{user.phone_number}</td>\n                                <td> {user.isAdmin === true\n                                        ? <i class=\"fas fa-check\" style={{color: \"rgb(67, 211, 0)\"}}></i>\n                                        : <i class=\"fas fa-times-circle\" style={{color: \"rgb(255, 0, 0)\"}}></i>\n                                        }\n                                </td>\n\n                                <td>\n                                    <Link to={`/user/edit/${user.slug}`}>\n                                        <Button variant=\"light\" \n                                            className=\"btn-sm\"\n                                            title=\"Edit User\">\n                                            <i class=\"fas fa-user-edit\"></i>  \n                                        </Button>\n                                    </Link>\n                                    \n                                        \n                                    <Button\n                                        variant=\"danger\"\n                                        className=\"btn-sm\" \n                                        title=\"Delete User\"\n                                        onClick={() => deleteHandler(user.slug)}>\n                                        <i class=\"fas fa-trash-alt\"\n                                        ></i> \n                                    </Button>\n                                         \n                                </td>\n                                \n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            )}\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Col, InputGroup, Row} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\n\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [first_name, setFirstName] = useState('')\n    const [last_name, setLastName] = useState('')\n    const [email, setEmail] = useState('')\n    const [phone_number, setPhoneNumber] = useState('')\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const [message, setMessage] = useState('') \n\n    const dispatch = useDispatch()\n\n    //get state\n    const userDetails = useSelector(state => state.userDetails)\n    const {error, loading, user} = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if(successUpdate) {\n            dispatch({type: USER_UPDATE_RESET})\n            // history.push('/users')\n            setMessage('User Updated Successfully')\n        } else {\n            if(user.slug !== userId) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setFirstName(user.first_name)\n                setLastName(user.last_name)\n                setEmail(user.email)\n                setPhoneNumber(user.phone_number)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n    }, [user, userId, successUpdate, history ])\n\n        \n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateUser({\n            slug: user.slug,\n            first_name,\n            last_name,\n            email,\n            phone_number,\n            isAdmin\n        }))\n\n    }\n\n\n\n    return (\n\n        <div>\n            <Link to='/users'>\n            <i class=\"fas fa-arrow-left\"></i> see all users\n            </Link>\n\n            <FormContainer>\n            <h3 style={{\"color\": \"#000\", \"textAlign\": \"center\"}} className=\"mb-2\">Edit User</h3>\n            \n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\n            {successUpdate && <Message variant='success'>{message}</Message> } \n\n            {loading ? <Loader /> \n            : error ? <Message variant='danger'>{error}</Message>\n            : (\n                <Form onSubmit={submitHandler}>\n                    <Row>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='first_name' className=\"my-2\">\n                                <Form.Label>First Name</Form.Label>\n                                <Form.Control \n                                    type='text'\n                                    placeholder='Enter First Name'\n                                    value={first_name}\n                                    onChange={(e) => setFirstName(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='last_name' className=\"my-2\">\n                                <Form.Label>Last Name</Form.Label>\n                                <Form.Control \n                                    type='text'\n                                    placeholder='Enter Last Name'\n                                    value={last_name}\n                                    onChange={(e) => setLastName(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Form.Group controlId='email' className='my-2'>\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type='email'\n                                placeholder='Enter Email Address'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}>\n                            </Form.Control>\n                        </Form.Group>\n                    </Row>\n\n                    <Row>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='phone_number' className='my-2'>\n                                <Form.Label>Phone Number</Form.Label>\n                                <InputGroup>\n                                    <InputGroup.Text id=\"inputGroupPrepend\">\n                                        <i className=\"fas fa-phone\"></i>\n                                    </InputGroup.Text>\n                                    <Form.Control \n                                        type=\"text\"\n                                        maxLength=\"13\"\n                                        aria-describedby=\"inputGroupPrepend\"\n                                        placeholder='Phone Number(Optional)'\n                                        value={phone_number}\n                                        onChange={(e) => setPhoneNumber(e.target.value)}>\n                                    </Form.Control>\n                                </InputGroup>\n                            </Form.Group>\n                        </Col>\n\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='isAdmin' className='my-2'>\n                                <Form.Label>Permission</Form.Label>\n                                    <InputGroup className=\"mb-3\">\n                                        <Form.Check \n                                            type='checkbox'\n                                            label='Is Admin'\n                                            checked={isAdmin}\n                                            onChange={(e) => setIsAdmin(e.target.checked)}>\n                                            \n                                        </Form.Check>\n                                </InputGroup>                          \n                            </Form.Group>\n                        </Col>\n                    </Row>\n\n                    <div className=\"d-grid gap-2 my-2\">\n                        <Button type='submit' size='md'>\n                            Update\n                        </Button>\n                    </div>\n                    \n\n                </Form>     \n            )}       \n        </FormContainer>\n\n        </div>\n        \n    )\n}\n\n\nexport default UserEditScreen\n\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Image } from 'react-bootstrap'\n\nimport RatingComponent from '../components/RatingComponent'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\n\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\n\nimport { commafy } from '../constants/cartConstants'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const [message, setMessage] = useState('')\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productCreate = useSelector(state => state.productCreate)\n    const {error: errorCreate, loading: loadingCreate, success: successCreate, product: createdProduct} = productCreate\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    \n\n    let search = history.location.search\n\n    useEffect(() => {\n        dispatch({type: PRODUCT_CREATE_RESET})\n\n        if(!userInfo.isAdmin) {\n            history.push(\"/login\")\n        } \n\n        if(successCreate) {\n            history.push(`/edit-product/${createdProduct.slug}`)\n        } else {\n            dispatch(listProducts(search))\n        }\n\n        \n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, search])\n\n    const deleteHandler = (id) => {\n        if(window.confirm(\"Are you sure you want to delete this product?\")){\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n     \n\n    return (\n        <div>\n            <Row className='align-items-center'>\n                <Col>\n                    <h2 style={{color: '#000'}}>Products</h2>\n                </Col>\n\n                <Col className='text-end'>\n                    \n                    <Button className=\"my-3\"\n                            onClick={createProductHandler}\n                            title=\"Create New Product\">\n                        \n                        \n                        {loadingCreate ? \"product is being created ...\"\n                            : !loadingCreate ? \"ADD PRODUCT\"\n                            : \"\"}\n\n                    </Button>\n                   \n                        \n                </Col>\n            </Row>\n\n            {loadingDelete && <Loader/ >}\n            {errorDelete && <Message variant=\"danger\">{errorDelete}</Message>}\n\n            \n            {errorCreate && <Message variant=\"danger\">{errorCreate}</Message>}\n            \n            {loading\n            ? <Loader />\n            : error\n            ? <Message variant=\"danger\">{error}</Message>\n            : (\n                <div>\n                <Table striped responsive className=\"table-sm\">\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th>Name</th>\n                            <th>Price(KES)</th>\n                            <th>Category</th>\n                            <th>Rating</th>\n                        </tr>\n                        \n                    </thead>\n\n                    <tbody>\n                        {products.map(product => (\n                            <tr key={product.slug}>\n                                <td><Image src={product.image} alt={product.name} style={{width: 50, height: 'auto'}} roundedCircle responsive/></td>\n                                <td>{product.name}</td>\n                                <td>{commafy(product.price)}</td>\n                                <td>{product.category}</td>\n                                <td><RatingComponent value={product.rating}  color={'#f16100'} /></td>\n                               \n                                <td>\n                                    <Link to={`/edit-product/${product.slug}`}>\n                                        <Button variant=\"light\" \n                                            className=\"btn-sm\"\n                                            title=\"Edit Product\">\n                                            <i class=\"fas fa-user-edit\"></i>  \n                                        </Button>\n                                        \n\n                                    </Link>\n                                    \n                                        \n                                    <Button\n                                        variant=\"danger\"\n                                        className=\"btn-sm\" \n                                        title=\"Delete Product\"\n                                        onClick={() => deleteHandler(product.slug)}>\n                                        <i class=\"fas fa-trash-alt\"\n                                        ></i> \n                                    </Button>\n                                         \n                                </td>\n                                \n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n                <Paginate pages={pages} page={page} isAdmin={true} />\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default ProductListScreen\n\n\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Col, InputGroup, Row, Image, File} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport { FileUploader } from '../components/FileUploader';\n\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport axios from 'axios'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName]                 = useState('')\n    const [image, setImage]               = useState('')\n    const [price, setPrice]               = useState('')\n    const [category, setCategory]         = useState('')\n    const [description, setDescription]   = useState('')\n    const [countInStock, setCountInStock] = useState('')\n    \n\n    const [uploading, setUploading]       = useState(false)\n    \n    \n\n    const [message, setMessage] = useState('') \n\n    const dispatch = useDispatch()\n\n    //get state\n    const productDetails = useSelector(state => state.productDetails)\n    const {error, loading, product} = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const {error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n    useEffect(() => {\n        \n        if(successUpdate) {\n            dispatch({type: PRODUCT_UPDATE_RESET})\n            \n            history.push('/products')\n            // setMessage(\"Product Updated Successfully\")\n            \n        } else {\n            if(!product.name || product.slug !== productId) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setImage(product.image)\n                setPrice(product.price)\n                setCategory(product.category)\n                setDescription(product.description)\n                setCountInStock(product.countInStock)\n                // setCreatedAt(product.created_at)\n                // setUpdatedAt(product.updated_at)\n            }\n        }\n\n        \n    }, [dispatch, product, productId, history, successUpdate])\n\n    \n    const uploadFileHandler = async (e) => {\n\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_slug', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n            const {data} = await axios.post('/api/image-upload', formData, config)\n            setImage(data)\n            setUploading(false)\n\n        } catch(error) {\n            setUploading(false)\n        }\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            slug: productId,\n            name,\n            image,\n            price,\n            category,\n            description,\n            countInStock\n        }))\n\n    }\n\n\n\n    return (\n        <div>\n            <Link to='/products'>\n            <i class=\"fas fa-arrow-left\"></i>\n            </Link>\n\n            <FormContainer>\n            {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\n            {/* {successUpdate && <Message variant=\"success\">{message}</Message>} */}\n\n            <h3 style={{\"color\": \"#000\", \"textAlign\": \"center\"}} className=\"mb-2\">Edit Product</h3>\n            \n            {/* {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message> }\n            {successUpdate && <Message variant='success'>{message}</Message> }  */}\n\n            {loading ? <Loader /> \n            : error ? <Message variant='danger'>{error}</Message>\n            : (\n                <Form onSubmit={submitHandler}>\n                    <Row>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='name' className=\"my-2\">\n                                <Form.Label>Product Name</Form.Label>\n                                <Form.Control \n                                    type='text'\n                                    placeholder='Product Name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='price' className=\"my-2\">\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control \n                                    type='number'\n                                    placeholder='Price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n\n                        \n                            <Image src={image} onChange={(e) => setImage(e.target.src)} />\n                            \n                            <Form.Control type=\"file\" onChange={uploadFileHandler} multiple/>\n                            {uploading && <Loader />}\n                            \n\n                            \n                            \n                       \n                        \n\n                        \n                    </Row>\n\n                    <Row>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='category' className='my-2'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='countInStock' className='my-2'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n                                    type='number'\n                                    placeholder='Stock Count'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n\n                    </Row>\n\n                    <Row>\n                        <Col sm={12} md={12} xl={12}>\n                            <Form.Group controlId='description' className='my-2'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={6}\n                                    placeholder='Product Description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n\n                    </Row>\n\n                    <div className=\"d-grid gap-2 my-2\">\n                        <Button type='submit' size='md'>\n                        {\n                            loadingUpdate ? \"updating product...\"\n                            : \"Update\"\n                        }\n                        </Button>\n                    </div>\n                    \n\n                </Form>     \n            )}       \n        </FormContainer>\n\n    </div>\n        \n    )\n}\n\n\nexport default ProductEditScreen\n\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Col, InputGroup, Row, Image} from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\n\nimport { createProduct } from '../actions/productActions'\n\n\n\nfunction ProductEditScreen({ location, history }) {\n\n    const redirect = location.search ? location.search.split('='[1]) : '/shop'\n    const [message, setMessage] = useState('') \n\n    const [name, setName]                 = useState('')\n    const [image, setImage]               = useState('')\n    const [price, setPrice]               = useState('')\n    const [category, setCategory]         = useState('')\n    const [description, setDescription]   = useState('')\n    const [countInStock, setCountInStock] = useState('')\n    \n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productCreate = useSelector(state => state.productCreate)\n    const {error, loading, success} = productCreate\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(!userInfo || userInfo.IsAdmin) {\n            history.push(redirect)\n        } else {\n            if(success) {\n                history.push('/products')\n            }\n        }\n    }, [history, userInfo, redirect])\n         \n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(createProduct(\n            name,\n            image,\n            price,\n            category,\n            description,\n            countInStock\n        ))\n\n    }\n\n\n\n    return (\n        <div>\n            <Link to='/products'>\n            <i class=\"fas fa-arrow-left\"></i>\n            </Link>\n\n            <FormContainer>\n            <h3 style={{\"color\": \"#000\", \"textAlign\": \"center\"}} className=\"mb-2\">Create Product</h3>\n            \n            \n\n            {loading ? <Loader /> \n            : error ? <Message variant='danger'>{error}</Message>\n            : (\n                <Form onSubmit={submitHandler}>\n                    <Row>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='name' className=\"my-2\">\n                                <Form.Label>Product Name</Form.Label>\n                                <Form.Control \n                                    type='text'\n                                    placeholder='Product Name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='price' className=\"my-2\">\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control \n                                    type='number'\n                                    placeholder='Price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Form.Group controlId='price' className=\"my-2\">                        \n                            <Button className=\"btn btn-mdb-color btn-rounded float-left\">\n                                <span>Choose file</span>\n                                <input type=\"file\"></input>\n                            </Button>\n                            \n                        </Form.Group>\n                        \n\n                        \n                    </Row>\n\n                    <Row>\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='category' className='my-2'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n                                    type='text'\n                                    placeholder='Category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n\n                        <Col sm={12} md={6} xl={6}>\n                            <Form.Group controlId='countInStock' className='my-2'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n                                    type='number'\n                                    placeholder='Stock Count'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n\n                    </Row>\n\n                    <Row>\n                        <Col sm={12} md={12} xl={12}>\n                            <Form.Group controlId='description' className='my-2'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    as=\"textarea\"\n                                    rows={6}\n                                    placeholder='Product Description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n\n                    </Row>\n\n                    <div className=\"d-grid gap-2 my-2\">\n                        <Button type='submit' size='md'>\n                            Update\n                        </Button>\n                    </div>\n                    \n\n                </Form>     \n            )}       \n        </FormContainer>\n\n    </div>\n        \n    )\n}\n\n\nexport default ProductEditScreen\n\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Image } from 'react-bootstrap'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\nimport { listOrders } from '../actions/orderActions'\nimport { Link } from 'react-router-dom'\n\nimport { commafy } from '../constants/cartConstants'\n\n\n\n\nfunction OrderListScreen({history}) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push(\"/shop\")\n        }\n        \n    }, [dispatch, history, userInfo])\n\n    \n        \n\n    return (\n        <div>\n            <h2 style={{color: '#000'}}>Orders</h2>\n\n            {loading\n            ? <Loader />\n            : error\n            ? <Message variant=\"danger\">{error}</Message>\n            : (\n                <Table striped responsive className=\"table-sm\" hover>\n                    <thead>\n                        <tr>\n                            <th>User</th>\n                            <th>Date</th>\n                            <th>T.Price</th>\n                            <th>Payment method</th>\n                            <th>Paid</th>\n                            <th>Delivered</th>\n                        </tr>\n                        \n                    </thead>\n\n                    <tbody>\n                        {orders.map(order => (\n                            <tr key={order.slug}>\n\n                                <td>{order.user && order.user.full_name}</td>\n                                <td>{order.created_at.substring(0, 10)}</td>\n                                <td>{commafy(order.totalPrice)}</td>\n                               \n                                \n\n                                <td> {order.paymentMethod === \"Paypal\" \n                                        ? <Image src=\"https://learning-tribes.com/wp-content/uploads/2021/01/paypal-logo-png-transparent-1024x333.png\" style={{width: 70, height: 'auto'}} />\n                                        : <Image src=\"https://www.gtbank.co.ke/uploads/transforms/general/47459/mpesa_af599ee76a60a3ffac0b778428c6ae2f.png\" style={{width: 50, height: 'auto'}} />\n                                        }\n                                </td>\n\n                                <td> {order.isPaid \n                                        ? <i class=\"fas fa-check\" style={{color: \"rgb(67, 211, 0)\"}}></i> \n                                        : <i class=\"fas fa-times-circle\" style={{color: \"rgb(255, 0, 0)\"}}></i>\n                                        }\n                                </td>\n\n                                <td> {order.isDelivered \n                                        ? <i class=\"fas fa-check\" style={{color: \"rgb(67, 211, 0)\"}}></i>\n                                        : <i class=\"fas fa-times-circle\" style={{color: \"rgb(255, 0, 0)\"}}></i>\n                                        }\n                                </td>\n\n                                <td>\n                                    <Link to={`/order-details/${order.slug}`}>\n                                        <Button variant=\"primary\" \n                                            className=\"btn-sm\"\n                                            title=\"See order details\">\n                                            See Details \n                                        </Button>\n                                    </Link>\n                                    \n                                        \n                                    {/* <Button\n                                        variant=\"danger\"\n                                        className=\"btn-sm\" \n                                        title=\"Delete User\"\n                                        onClick={() => deleteHandler(user.slug)}>\n                                        <i class=\"fas fa-trash-alt\"\n                                        ></i> \n                                    </Button> */}\n                                         \n                                </td>\n                                \n                            </tr>\n                        ))}\n                    </tbody>\n\n                </Table>\n            )}\n        </div>\n    )\n}\n\nexport default OrderListScreen\n","import { Container } from 'react-bootstrap'\n\nimport { HashRouter as Router, Route } from 'react-router-dom' //react routing package\n\n\n\n\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport ShopScreen from './screens/ShopScreen'\n\nimport HomeScreen from './screens/HomeScreen'\n\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderDetailsScreen from './screens/OrderDetailsScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport ProductCreateScreen from './screens/ProductCreateScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\n\n\nfunction App() {\n  return (\n    <Router>\n    \n      <Header />\n\n      <main>\n        <Container>\n          {/* use route and pass component */}\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n\n          <Route path='/shop' component={ShopScreen} exact/>\n          <Route path='/' component={HomeScreen} exact/>\n          \n          <Route path='/cart/:id?' component={CartScreen} />\n\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/products' component={ProductListScreen} />\n\n          <Route path='/edit-product/:id' component={ProductEditScreen} />\n          <Route path='/create-product' component={ProductCreateScreen} />\n\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n\n          <Route path='/order-details/:id' component={OrderDetailsScreen} />\n          <Route path='/orders' component={OrderListScreen} />\n\n          <Route path='/users' component={UserListScreen} />\n          <Route path='/user/edit/:id' component={UserEditScreen} />\n        </Container>\n      </main>\n\n      <Footer />\n\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux' //import redux to make it global\nimport store from './store'  //import store\n\nimport './index.css';\n\nimport './bootstrap.min.css';\n// import './glassified.min.css';\n//import './orange.min.css';\n//import './zephyr.min.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}> \n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}